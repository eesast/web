/**
 * @fileoverview gRPC-Web generated client stub for protobuf
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.24.4
// source: Services.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as Message2Server_pb from "./Message2Server_pb";
import * as Message2Clients_pb from "./Message2Clients_pb";

export class AvailableServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any },
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorTryConnection = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/TryConnection",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  tryConnection(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  tryConnection(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  tryConnection(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/TryConnection",
        request,
        metadata || {},
        this.methodDescriptorTryConnection,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/TryConnection",
      request,
      metadata || {},
      this.methodDescriptorTryConnection,
    );
  }

  methodDescriptorAddPlayer = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/AddPlayer",
    grpcWeb.MethodType.SERVER_STREAMING,
    Message2Server_pb.PlayerMsg,
    Message2Clients_pb.MessageToClient,
    (request: Message2Server_pb.PlayerMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.MessageToClient.deserializeBinary,
  );

  addPlayer(
    request: Message2Server_pb.PlayerMsg,
    metadata?: grpcWeb.Metadata,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.MessageToClient> {
    return this.client_.serverStreaming(
      this.hostname_ + "/protobuf.AvailableService/AddPlayer",
      request,
      metadata || {},
      this.methodDescriptorAddPlayer,
    );
  }

  methodDescriptorMove = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/Move",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.MoveMsg,
    Message2Clients_pb.MoveRes,
    (request: Message2Server_pb.MoveMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.MoveRes.deserializeBinary,
  );

  move(
    request: Message2Server_pb.MoveMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.MoveRes>;

  move(
    request: Message2Server_pb.MoveMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.MoveRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.MoveRes>;

  move(
    request: Message2Server_pb.MoveMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.MoveRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/Move",
        request,
        metadata || {},
        this.methodDescriptorMove,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/Move",
      request,
      metadata || {},
      this.methodDescriptorMove,
    );
  }

  methodDescriptorPickProp = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/PickProp",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.PropMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.PropMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  pickProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  pickProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  pickProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/PickProp",
        request,
        metadata || {},
        this.methodDescriptorPickProp,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/PickProp",
      request,
      metadata || {},
      this.methodDescriptorPickProp,
    );
  }

  methodDescriptorUseProp = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/UseProp",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.PropMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.PropMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  useProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  useProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  useProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/UseProp",
        request,
        metadata || {},
        this.methodDescriptorUseProp,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/UseProp",
      request,
      metadata || {},
      this.methodDescriptorUseProp,
    );
  }

  methodDescriptorThrowProp = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/ThrowProp",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.PropMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.PropMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  throwProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  throwProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  throwProp(
    request: Message2Server_pb.PropMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/ThrowProp",
        request,
        metadata || {},
        this.methodDescriptorThrowProp,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/ThrowProp",
      request,
      metadata || {},
      this.methodDescriptorThrowProp,
    );
  }

  methodDescriptorUseSkill = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/UseSkill",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.SkillMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.SkillMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  useSkill(
    request: Message2Server_pb.SkillMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  useSkill(
    request: Message2Server_pb.SkillMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  useSkill(
    request: Message2Server_pb.SkillMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/UseSkill",
        request,
        metadata || {},
        this.methodDescriptorUseSkill,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/UseSkill",
      request,
      metadata || {},
      this.methodDescriptorUseSkill,
    );
  }

  methodDescriptorSendMessage = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/SendMessage",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.SendMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.SendMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  sendMessage(
    request: Message2Server_pb.SendMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  sendMessage(
    request: Message2Server_pb.SendMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  sendMessage(
    request: Message2Server_pb.SendMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/SendMessage",
        request,
        metadata || {},
        this.methodDescriptorSendMessage,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/SendMessage",
      request,
      metadata || {},
      this.methodDescriptorSendMessage,
    );
  }

  methodDescriptorStartLearning = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/StartLearning",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  startLearning(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  startLearning(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  startLearning(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/StartLearning",
        request,
        metadata || {},
        this.methodDescriptorStartLearning,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/StartLearning",
      request,
      metadata || {},
      this.methodDescriptorStartLearning,
    );
  }

  methodDescriptorStartRescueMate = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/StartRescueMate",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.TreatAndRescueMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.TreatAndRescueMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  startRescueMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  startRescueMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  startRescueMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/StartRescueMate",
        request,
        metadata || {},
        this.methodDescriptorStartRescueMate,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/StartRescueMate",
      request,
      metadata || {},
      this.methodDescriptorStartRescueMate,
    );
  }

  methodDescriptorStartTreatMate = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/StartTreatMate",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.TreatAndRescueMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.TreatAndRescueMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  startTreatMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  startTreatMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  startTreatMate(
    request: Message2Server_pb.TreatAndRescueMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/StartTreatMate",
        request,
        metadata || {},
        this.methodDescriptorStartTreatMate,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/StartTreatMate",
      request,
      metadata || {},
      this.methodDescriptorStartTreatMate,
    );
  }

  methodDescriptorAttack = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/Attack",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.AttackMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.AttackMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  attack(
    request: Message2Server_pb.AttackMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  attack(
    request: Message2Server_pb.AttackMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  attack(
    request: Message2Server_pb.AttackMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/Attack",
        request,
        metadata || {},
        this.methodDescriptorAttack,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/Attack",
      request,
      metadata || {},
      this.methodDescriptorAttack,
    );
  }

  methodDescriptorGraduate = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/Graduate",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  graduate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  graduate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  graduate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/Graduate",
        request,
        metadata || {},
        this.methodDescriptorGraduate,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/Graduate",
      request,
      metadata || {},
      this.methodDescriptorGraduate,
    );
  }

  methodDescriptorOpenDoor = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/OpenDoor",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  openDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  openDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  openDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/OpenDoor",
        request,
        metadata || {},
        this.methodDescriptorOpenDoor,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/OpenDoor",
      request,
      metadata || {},
      this.methodDescriptorOpenDoor,
    );
  }

  methodDescriptorCloseDoor = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/CloseDoor",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  closeDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  closeDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  closeDoor(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/CloseDoor",
        request,
        metadata || {},
        this.methodDescriptorCloseDoor,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/CloseDoor",
      request,
      metadata || {},
      this.methodDescriptorCloseDoor,
    );
  }

  methodDescriptorSkipWindow = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/SkipWindow",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  skipWindow(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  skipWindow(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  skipWindow(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/SkipWindow",
        request,
        metadata || {},
        this.methodDescriptorSkipWindow,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/SkipWindow",
      request,
      metadata || {},
      this.methodDescriptorSkipWindow,
    );
  }

  methodDescriptorStartOpenGate = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/StartOpenGate",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  startOpenGate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  startOpenGate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  startOpenGate(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/StartOpenGate",
        request,
        metadata || {},
        this.methodDescriptorStartOpenGate,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/StartOpenGate",
      request,
      metadata || {},
      this.methodDescriptorStartOpenGate,
    );
  }

  methodDescriptorStartOpenChest = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/StartOpenChest",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  startOpenChest(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  startOpenChest(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  startOpenChest(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/StartOpenChest",
        request,
        metadata || {},
        this.methodDescriptorStartOpenChest,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/StartOpenChest",
      request,
      metadata || {},
      this.methodDescriptorStartOpenChest,
    );
  }

  methodDescriptorEndAllAction = new grpcWeb.MethodDescriptor(
    "/protobuf.AvailableService/EndAllAction",
    grpcWeb.MethodType.UNARY,
    Message2Server_pb.IDMsg,
    Message2Clients_pb.BoolRes,
    (request: Message2Server_pb.IDMsg) => {
      return request.serializeBinary();
    },
    Message2Clients_pb.BoolRes.deserializeBinary,
  );

  endAllAction(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
  ): Promise<Message2Clients_pb.BoolRes>;

  endAllAction(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ): grpcWeb.ClientReadableStream<Message2Clients_pb.BoolRes>;

  endAllAction(
    request: Message2Server_pb.IDMsg,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: Message2Clients_pb.BoolRes,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/protobuf.AvailableService/EndAllAction",
        request,
        metadata || {},
        this.methodDescriptorEndAllAction,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/protobuf.AvailableService/EndAllAction",
      request,
      metadata || {},
      this.methodDescriptorEndAllAction,
    );
  }
}
