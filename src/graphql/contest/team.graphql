#插入队伍信息
mutation InsertTeam(
  $team_name: String!
  $team_intro: String = "" # 此处的intro可以为NULL
  $team_leader_uuid: uuid! # team_leader的uuid
  $invited_code: String!
  $contest_id: uuid! # 比赛名称是必填的项
) {
  insert_contest_team(
    objects: {
      team_name: $team_name
      team_intro: $team_intro
      team_leader_uuid: $team_leader_uuid
      invited_code: $invited_code
      contest_id: $contest_id
    }
  ) {
    # returning {
    #   team_id
    #   team_name
    #   team_sum
    #   team_leader
    # }
    affected_rows # 即commit
  }
} #
# 判断是否是某次比赛的leader并返回team_id#

query IsTeamLeader($uuid: uuid!, $contest_id: uuid!) {
  contest_team(
    where: {
      team_leader: { uuid: { _eq: $uuid } }
      _and: { contest_id: { _eq: $contest_id } }
    }
  ) {
    team_id
  }
}
# 判断是否是member返回id
query IsTeamMember($user_uuid: uuid!, $contest_id: uuid!) {
  contest_team_member(
    where: {
      user_uuid: { _eq: $user_uuid }
      _and: { contest_team: { contest_id: { _eq: $contest_id } } }
    }
  ) {
    team_id
  }
}

# 借由team_id获取code的所有信息
subscription GetCodeUpdateTime($team_id: uuid!) {
  contest_code(where: { team_id: { _eq: $team_id } }) {
    code1_update_time
    code2_update_time
    code3_update_time
    code4_update_time
    code5_update_time
    code6_update_time
  }
}

subscription GetAllTeamInfo($contest_id: uuid!) {
  contest_team(where: { contest_id: { _eq: $contest_id } }) {
    team_name
    created_at
    invited_code
    member_num
    score
    status
    status2
    contest_score
    team_id
    submitted_code_num
    contest {
      contest_name
    }
    team_intro
    team_leader {
      uuid
      class
      email
      realname
      phone
    }
    contest_team_members {
      user {
        id
        class
        email
        realname
        phone
      }
    }
  }
}

# 查询有分数的队伍的信息
query GetAllTeamInfo_score($contest_id: uuid!) {
  contest_team(
    where: {
      _and: { contest_id: { _eq: $contest_id }, score: { _is_null: false } }
    }
  ) {
    team_name
    created_at
    invited_code
    member_num
    score
    status
    status2
    contest_score
    team_id
    submitted_code_num
    contest {
      contest_name
    }
    team_intro
    team_leader {
      uuid
      class
      email
      realname
      phone
    }
    contest_team_members {
      user {
        id
        class
        email
        realname
        phone
      }
    }
  }
}

# 查询有分数的队伍的信息
query GetAllTeamInfo_compile($contest_id: uuid!) {
  contest_team(
    where: {
      _and: { contest_id: { _eq: $contest_id }, status: { _eq: "compiled" } }
    }
  ) {
    team_name
    score
    status
    status2
    contest_score
    team_id
  }
}

# 查询某只队伍的信息
query GetTeamInfo($contest_id: uuid!, $team_id: uuid!) {
  contest_team(
    where: { contest_id: { _eq: $contest_id }, team_id: { _eq: $team_id } }
  ) {
    team_name
    created_at
    invited_code
    member_num
    score
    status
    status2
    contest_score
    team_id
    submitted_code_num
    contest {
      contest_name
    }
    team_intro
    team_leader {
      uuid
      class
      email
      realname
      phone
    }
    contest_team_members {
      user {
        id
        class
        email
        realname
        phone
      }
    }
  }
}

subscription GetCompileStatus($contest_id: uuid!, $team_id: uuid!) {
  contest_team(
    where: { contest_id: { _eq: $contest_id }, team_id: { _eq: $team_id } }
  ) {
    status
  }
}

#插入队员
mutation InsertTeamMember($team_id: uuid!, $user_uuid: uuid!) {
  insert_contest_team_member(
    objects: { team_id: $team_id, user_uuid: $user_uuid }
  ) {
    affected_rows
  }
}

#更新队伍信息
mutation UpdateTeam(
  $team_id: uuid!
  $team_intro: String!
  $team_name: String!
) {
  update_contest_team(
    where: { team_id: { _eq: $team_id } }
    _set: { team_intro: $team_intro, team_name: $team_name }
  ) {
    affected_rows
  }
}

#根据队伍id查询所有队员信息
query GetMemberInfo($team_id: uuid!) {
  contest_team(where: { team_id: { _eq: $team_id } }) {
    team_leader {
      realname
      id
      uuid
    }
  }
  contest_team_member(where: { team_id: { _eq: $team_id } }) {
    user {
      id
      uuid
      realname
    }
  }
}

#在contest_team中删除队伍
mutation DeleteTeam($team_id: uuid!) {
  delete_contest_team(where: { team_id: { _eq: $team_id } }) {
    affected_rows
  }
}
#在team_member中删除所有队员信息
mutation DeleteAllTeamMember($team_id: uuid!) {
  delete_contest_team_member(where: { team_id: { _eq: $team_id } }) {
    affected_rows
  }
}

#在team_member中删除指定队员信息
mutation DeleteTeamMember($user_uuid: uuid!, $team_id: uuid!) {
  delete_contest_team_member(
    where: { user_uuid: { _eq: $user_uuid }, team_id: { _eq: $team_id } }
  ) {
    affected_rows
  }
}

# 通过队伍名查询队伍ID
query QueryTeamID($team_name: String!, $contest_id: uuid!) {
  contest_team(
    where: { team_name: { _eq: $team_name }, contest_id: { _eq: $contest_id } }
  ) {
    team_id
    status
  }
}
