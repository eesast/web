// source: Message2Clients.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var MessageType_pb = require('./MessageType_pb.js');
goog.object.extend(proto, MessageType_pb);
goog.exportSymbol('proto.protobuf.BoolRes', null, global);
goog.exportSymbol('proto.protobuf.EcoRes', null, global);
goog.exportSymbol('proto.protobuf.MessageOfAll', null, global);
goog.exportSymbol('proto.protobuf.MessageOfBombedBullet', null, global);
goog.exportSymbol('proto.protobuf.MessageOfBullet', null, global);
goog.exportSymbol('proto.protobuf.MessageOfCommunity', null, global);
goog.exportSymbol('proto.protobuf.MessageOfFactory', null, global);
goog.exportSymbol('proto.protobuf.MessageOfFort', null, global);
goog.exportSymbol('proto.protobuf.MessageOfHome', null, global);
goog.exportSymbol('proto.protobuf.MessageOfMap', null, global);
goog.exportSymbol('proto.protobuf.MessageOfMap.Row', null, global);
goog.exportSymbol('proto.protobuf.MessageOfNews', null, global);
goog.exportSymbol('proto.protobuf.MessageOfNews.NewsCase', null, global);
goog.exportSymbol('proto.protobuf.MessageOfObj', null, global);
goog.exportSymbol('proto.protobuf.MessageOfObj.MessageOfObjCase', null, global);
goog.exportSymbol('proto.protobuf.MessageOfResource', null, global);
goog.exportSymbol('proto.protobuf.MessageOfShip', null, global);
goog.exportSymbol('proto.protobuf.MessageOfTeam', null, global);
goog.exportSymbol('proto.protobuf.MessageOfWormhole', null, global);
goog.exportSymbol('proto.protobuf.MessageToClient', null, global);
goog.exportSymbol('proto.protobuf.MoveRes', null, global);
goog.exportSymbol('proto.protobuf.ShipInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfShip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfShip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfShip.displayName = 'proto.protobuf.MessageOfShip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfBullet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfBullet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfBullet.displayName = 'proto.protobuf.MessageOfBullet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfBombedBullet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfBombedBullet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfBombedBullet.displayName = 'proto.protobuf.MessageOfBombedBullet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfFactory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfFactory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfFactory.displayName = 'proto.protobuf.MessageOfFactory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfCommunity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfCommunity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfCommunity.displayName = 'proto.protobuf.MessageOfCommunity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfFort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfFort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfFort.displayName = 'proto.protobuf.MessageOfFort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfWormhole = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfWormhole, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfWormhole.displayName = 'proto.protobuf.MessageOfWormhole';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfResource.displayName = 'proto.protobuf.MessageOfResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfHome = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfHome, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfHome.displayName = 'proto.protobuf.MessageOfHome';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageOfMap.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageOfMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.displayName = 'proto.protobuf.MessageOfMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageOfMap.Row.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageOfMap.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.Row.displayName = 'proto.protobuf.MessageOfMap.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfTeam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfTeam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfTeam.displayName = 'proto.protobuf.MessageOfTeam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf.MessageOfObj.oneofGroups_);
};
goog.inherits(proto.protobuf.MessageOfObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfObj.displayName = 'proto.protobuf.MessageOfObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfAll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfAll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfAll.displayName = 'proto.protobuf.MessageOfAll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageToClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageToClient.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageToClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageToClient.displayName = 'proto.protobuf.MessageToClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MoveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MoveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MoveRes.displayName = 'proto.protobuf.MoveRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.BoolRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.BoolRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.BoolRes.displayName = 'proto.protobuf.BoolRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.ShipInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.ShipInfoRes.repeatedFields_, null);
};
goog.inherits(proto.protobuf.ShipInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.ShipInfoRes.displayName = 'proto.protobuf.ShipInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.EcoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.EcoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.EcoRes.displayName = 'proto.protobuf.EcoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfNews = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf.MessageOfNews.oneofGroups_);
};
goog.inherits(proto.protobuf.MessageOfNews, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfNews.displayName = 'proto.protobuf.MessageOfNews';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfShip.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfShip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfShip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfShip.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    speed: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    armor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    shield: jspb.Message.getFieldWithDefault(msg, 6, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    guid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    shipState: jspb.Message.getFieldWithDefault(msg, 10, 0),
    shipType: jspb.Message.getFieldWithDefault(msg, 11, 0),
    viewRange: jspb.Message.getFieldWithDefault(msg, 12, 0),
    producerType: jspb.Message.getFieldWithDefault(msg, 13, 0),
    constructorType: jspb.Message.getFieldWithDefault(msg, 14, 0),
    armorType: jspb.Message.getFieldWithDefault(msg, 15, 0),
    shieldType: jspb.Message.getFieldWithDefault(msg, 16, 0),
    weaponType: jspb.Message.getFieldWithDefault(msg, 17, 0),
    facingDirection: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfShip}
 */
proto.protobuf.MessageOfShip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfShip;
  return proto.protobuf.MessageOfShip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfShip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfShip}
 */
proto.protobuf.MessageOfShip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setArmor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShield(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGuid(value);
      break;
    case 10:
      var value = /** @type {!proto.protobuf.ShipState} */ (reader.readEnum());
      msg.setShipState(value);
      break;
    case 11:
      var value = /** @type {!proto.protobuf.ShipType} */ (reader.readEnum());
      msg.setShipType(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViewRange(value);
      break;
    case 13:
      var value = /** @type {!proto.protobuf.ProducerType} */ (reader.readEnum());
      msg.setProducerType(value);
      break;
    case 14:
      var value = /** @type {!proto.protobuf.ConstructorType} */ (reader.readEnum());
      msg.setConstructorType(value);
      break;
    case 15:
      var value = /** @type {!proto.protobuf.ArmorType} */ (reader.readEnum());
      msg.setArmorType(value);
      break;
    case 16:
      var value = /** @type {!proto.protobuf.ShieldType} */ (reader.readEnum());
      msg.setShieldType(value);
      break;
    case 17:
      var value = /** @type {!proto.protobuf.WeaponType} */ (reader.readEnum());
      msg.setWeaponType(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFacingDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfShip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfShip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfShip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfShip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getArmor();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getShield();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getShipState();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getShipType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getViewRange();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getProducerType();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getConstructorType();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getArmorType();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getShieldType();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getWeaponType();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 speed = 3;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 hp = 4;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 armor = 5;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getArmor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setArmor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 shield = 6;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getShield = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setShield = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 team_id = 7;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 player_id = 8;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 guid = 9;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setGuid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional ShipState ship_state = 10;
 * @return {!proto.protobuf.ShipState}
 */
proto.protobuf.MessageOfShip.prototype.getShipState = function() {
  return /** @type {!proto.protobuf.ShipState} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.protobuf.ShipState} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setShipState = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional ShipType ship_type = 11;
 * @return {!proto.protobuf.ShipType}
 */
proto.protobuf.MessageOfShip.prototype.getShipType = function() {
  return /** @type {!proto.protobuf.ShipType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.protobuf.ShipType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setShipType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional int32 view_range = 12;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getViewRange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setViewRange = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional ProducerType producer_type = 13;
 * @return {!proto.protobuf.ProducerType}
 */
proto.protobuf.MessageOfShip.prototype.getProducerType = function() {
  return /** @type {!proto.protobuf.ProducerType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.protobuf.ProducerType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setProducerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional ConstructorType constructor_type = 14;
 * @return {!proto.protobuf.ConstructorType}
 */
proto.protobuf.MessageOfShip.prototype.getConstructorType = function() {
  return /** @type {!proto.protobuf.ConstructorType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.protobuf.ConstructorType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setConstructorType = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional ArmorType armor_type = 15;
 * @return {!proto.protobuf.ArmorType}
 */
proto.protobuf.MessageOfShip.prototype.getArmorType = function() {
  return /** @type {!proto.protobuf.ArmorType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.protobuf.ArmorType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setArmorType = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional ShieldType shield_type = 16;
 * @return {!proto.protobuf.ShieldType}
 */
proto.protobuf.MessageOfShip.prototype.getShieldType = function() {
  return /** @type {!proto.protobuf.ShieldType} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.protobuf.ShieldType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setShieldType = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional WeaponType weapon_type = 17;
 * @return {!proto.protobuf.WeaponType}
 */
proto.protobuf.MessageOfShip.prototype.getWeaponType = function() {
  return /** @type {!proto.protobuf.WeaponType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.protobuf.WeaponType} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setWeaponType = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional double facing_direction = 18;
 * @return {number}
 */
proto.protobuf.MessageOfShip.prototype.getFacingDirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfShip} returns this
 */
proto.protobuf.MessageOfShip.prototype.setFacingDirection = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfBullet.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfBullet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfBullet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBullet.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFieldWithDefault(msg, 2, 0),
    y: jspb.Message.getFieldWithDefault(msg, 3, 0),
    facingDirection: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    damage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    guid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bombRange: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    speed: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfBullet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfBullet;
  return proto.protobuf.MessageOfBullet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfBullet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfBullet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.BulletType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFacingDirection(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDamage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGuid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBombRange(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfBullet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfBullet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfBullet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBullet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getBombRange();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional BulletType type = 1;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfBullet.prototype.getType = function() {
  return /** @type {!proto.protobuf.BulletType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getFacingDirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setFacingDirection = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 damage = 5;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 team_id = 6;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 guid = 7;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setGuid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double bomb_range = 8;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getBombRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setBombRange = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int32 speed = 9;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfBombedBullet.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfBombedBullet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfBombedBullet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBombedBullet.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFieldWithDefault(msg, 2, 0),
    y: jspb.Message.getFieldWithDefault(msg, 3, 0),
    facingDirection: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    mappingId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    bombRange: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfBombedBullet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfBombedBullet;
  return proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfBombedBullet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.BulletType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFacingDirection(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMappingId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBombRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfBombedBullet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfBombedBullet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getMappingId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getBombRange();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional BulletType type = 1;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getType = function() {
  return /** @type {!proto.protobuf.BulletType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getFacingDirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setFacingDirection = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 mapping_id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getMappingId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setMappingId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double bomb_range = 6;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getBombRange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setBombRange = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfFactory.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfFactory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfFactory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFactory.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfFactory}
 */
proto.protobuf.MessageOfFactory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfFactory;
  return proto.protobuf.MessageOfFactory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfFactory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfFactory}
 */
proto.protobuf.MessageOfFactory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfFactory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfFactory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfFactory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFactory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfFactory.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFactory} returns this
 */
proto.protobuf.MessageOfFactory.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfFactory.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFactory} returns this
 */
proto.protobuf.MessageOfFactory.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfFactory.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFactory} returns this
 */
proto.protobuf.MessageOfFactory.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfFactory.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFactory} returns this
 */
proto.protobuf.MessageOfFactory.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfCommunity.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfCommunity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfCommunity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfCommunity.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfCommunity}
 */
proto.protobuf.MessageOfCommunity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfCommunity;
  return proto.protobuf.MessageOfCommunity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfCommunity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfCommunity}
 */
proto.protobuf.MessageOfCommunity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfCommunity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfCommunity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfCommunity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfCommunity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfCommunity.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCommunity} returns this
 */
proto.protobuf.MessageOfCommunity.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfCommunity.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCommunity} returns this
 */
proto.protobuf.MessageOfCommunity.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfCommunity.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCommunity} returns this
 */
proto.protobuf.MessageOfCommunity.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfCommunity.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCommunity} returns this
 */
proto.protobuf.MessageOfCommunity.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfFort.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfFort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfFort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFort.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfFort}
 */
proto.protobuf.MessageOfFort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfFort;
  return proto.protobuf.MessageOfFort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfFort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfFort}
 */
proto.protobuf.MessageOfFort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfFort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfFort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfFort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfFort.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFort} returns this
 */
proto.protobuf.MessageOfFort.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfFort.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFort} returns this
 */
proto.protobuf.MessageOfFort.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfFort.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFort} returns this
 */
proto.protobuf.MessageOfFort.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfFort.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFort} returns this
 */
proto.protobuf.MessageOfFort.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfWormhole.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfWormhole.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfWormhole} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfWormhole.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfWormhole}
 */
proto.protobuf.MessageOfWormhole.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfWormhole;
  return proto.protobuf.MessageOfWormhole.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfWormhole} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfWormhole}
 */
proto.protobuf.MessageOfWormhole.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfWormhole.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfWormhole.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfWormhole} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfWormhole.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfWormhole.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfWormhole} returns this
 */
proto.protobuf.MessageOfWormhole.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfWormhole.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfWormhole} returns this
 */
proto.protobuf.MessageOfWormhole.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfWormhole.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfWormhole} returns this
 */
proto.protobuf.MessageOfWormhole.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfResource.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    progress: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfResource}
 */
proto.protobuf.MessageOfResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfResource;
  return proto.protobuf.MessageOfResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfResource}
 */
proto.protobuf.MessageOfResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfResource.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfResource} returns this
 */
proto.protobuf.MessageOfResource.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfResource.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfResource} returns this
 */
proto.protobuf.MessageOfResource.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 progress = 3;
 * @return {number}
 */
proto.protobuf.MessageOfResource.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfResource} returns this
 */
proto.protobuf.MessageOfResource.prototype.setProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfHome.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfHome.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfHome} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfHome.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfHome}
 */
proto.protobuf.MessageOfHome.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfHome;
  return proto.protobuf.MessageOfHome.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfHome} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfHome}
 */
proto.protobuf.MessageOfHome.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfHome.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfHome.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfHome} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfHome.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfHome.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHome} returns this
 */
proto.protobuf.MessageOfHome.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfHome.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHome} returns this
 */
proto.protobuf.MessageOfHome.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfHome.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHome} returns this
 */
proto.protobuf.MessageOfHome.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfHome.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHome} returns this
 */
proto.protobuf.MessageOfHome.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfMap.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    width: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.protobuf.MessageOfMap.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap;
  return proto.protobuf.MessageOfMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfMap.Row;
      reader.readMessage(value,proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.Row.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfMap.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfMap.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfMap.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    colsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap.Row;
  return proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.protobuf.PlaceType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCols(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated PlaceType cols = 1;
 * @return {!Array<!proto.protobuf.PlaceType>}
 */
proto.protobuf.MessageOfMap.Row.prototype.getColsList = function() {
  return /** @type {!Array<!proto.protobuf.PlaceType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.protobuf.PlaceType>} value
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.setColsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.protobuf.PlaceType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.addCols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.clearColsList = function() {
  return this.setColsList([]);
};


/**
 * optional uint32 height = 1;
 * @return {number}
 */
proto.protobuf.MessageOfMap.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 width = 2;
 * @return {number}
 */
proto.protobuf.MessageOfMap.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Row rows = 3;
 * @return {!Array<!proto.protobuf.MessageOfMap.Row>}
 */
proto.protobuf.MessageOfMap.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfMap.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfMap.Row, 3));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfMap.Row>} value
 * @return {!proto.protobuf.MessageOfMap} returns this
*/
proto.protobuf.MessageOfMap.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf.MessageOfMap.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf.MessageOfMap.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfTeam.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfTeam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfTeam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTeam.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    money: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfTeam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfTeam;
  return proto.protobuf.MessageOfTeam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfTeam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfTeam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfTeam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfTeam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfTeam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTeam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 team_id = 1;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 score = 3;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 money = 4;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfObj.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfObj.MessageOfObjCase = {
  MESSAGE_OF_OBJ_NOT_SET: 0,
  SHIP_MESSAGE: 1,
  BULLET_MESSAGE: 2,
  FACTORY_MESSAGE: 3,
  COMMUNITY_MESSAGE: 4,
  FORT_MESSAGE: 5,
  WORMHOLE_MESSAGE: 6,
  HOME_MESSAGE: 7,
  RESOURCE_MESSAGE: 8,
  MAP_MESSAGE: 9,
  NEWS_MESSAGE: 10,
  BOMBED_BULLET_MESSAGE: 11,
  TEAM_MESSAGE: 12
};

/**
 * @return {proto.protobuf.MessageOfObj.MessageOfObjCase}
 */
proto.protobuf.MessageOfObj.prototype.getMessageOfObjCase = function() {
  return /** @type {proto.protobuf.MessageOfObj.MessageOfObjCase} */(jspb.Message.computeOneofCase(this, proto.protobuf.MessageOfObj.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfObj.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    shipMessage: (f = msg.getShipMessage()) && proto.protobuf.MessageOfShip.toObject(includeInstance, f),
    bulletMessage: (f = msg.getBulletMessage()) && proto.protobuf.MessageOfBullet.toObject(includeInstance, f),
    factoryMessage: (f = msg.getFactoryMessage()) && proto.protobuf.MessageOfFactory.toObject(includeInstance, f),
    communityMessage: (f = msg.getCommunityMessage()) && proto.protobuf.MessageOfCommunity.toObject(includeInstance, f),
    fortMessage: (f = msg.getFortMessage()) && proto.protobuf.MessageOfFort.toObject(includeInstance, f),
    wormholeMessage: (f = msg.getWormholeMessage()) && proto.protobuf.MessageOfWormhole.toObject(includeInstance, f),
    homeMessage: (f = msg.getHomeMessage()) && proto.protobuf.MessageOfHome.toObject(includeInstance, f),
    resourceMessage: (f = msg.getResourceMessage()) && proto.protobuf.MessageOfResource.toObject(includeInstance, f),
    mapMessage: (f = msg.getMapMessage()) && proto.protobuf.MessageOfMap.toObject(includeInstance, f),
    newsMessage: (f = msg.getNewsMessage()) && proto.protobuf.MessageOfNews.toObject(includeInstance, f),
    bombedBulletMessage: (f = msg.getBombedBulletMessage()) && proto.protobuf.MessageOfBombedBullet.toObject(includeInstance, f),
    teamMessage: (f = msg.getTeamMessage()) && proto.protobuf.MessageOfTeam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfObj;
  return proto.protobuf.MessageOfObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfShip;
      reader.readMessage(value,proto.protobuf.MessageOfShip.deserializeBinaryFromReader);
      msg.setShipMessage(value);
      break;
    case 2:
      var value = new proto.protobuf.MessageOfBullet;
      reader.readMessage(value,proto.protobuf.MessageOfBullet.deserializeBinaryFromReader);
      msg.setBulletMessage(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfFactory;
      reader.readMessage(value,proto.protobuf.MessageOfFactory.deserializeBinaryFromReader);
      msg.setFactoryMessage(value);
      break;
    case 4:
      var value = new proto.protobuf.MessageOfCommunity;
      reader.readMessage(value,proto.protobuf.MessageOfCommunity.deserializeBinaryFromReader);
      msg.setCommunityMessage(value);
      break;
    case 5:
      var value = new proto.protobuf.MessageOfFort;
      reader.readMessage(value,proto.protobuf.MessageOfFort.deserializeBinaryFromReader);
      msg.setFortMessage(value);
      break;
    case 6:
      var value = new proto.protobuf.MessageOfWormhole;
      reader.readMessage(value,proto.protobuf.MessageOfWormhole.deserializeBinaryFromReader);
      msg.setWormholeMessage(value);
      break;
    case 7:
      var value = new proto.protobuf.MessageOfHome;
      reader.readMessage(value,proto.protobuf.MessageOfHome.deserializeBinaryFromReader);
      msg.setHomeMessage(value);
      break;
    case 8:
      var value = new proto.protobuf.MessageOfResource;
      reader.readMessage(value,proto.protobuf.MessageOfResource.deserializeBinaryFromReader);
      msg.setResourceMessage(value);
      break;
    case 9:
      var value = new proto.protobuf.MessageOfMap;
      reader.readMessage(value,proto.protobuf.MessageOfMap.deserializeBinaryFromReader);
      msg.setMapMessage(value);
      break;
    case 10:
      var value = new proto.protobuf.MessageOfNews;
      reader.readMessage(value,proto.protobuf.MessageOfNews.deserializeBinaryFromReader);
      msg.setNewsMessage(value);
      break;
    case 11:
      var value = new proto.protobuf.MessageOfBombedBullet;
      reader.readMessage(value,proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader);
      msg.setBombedBulletMessage(value);
      break;
    case 12:
      var value = new proto.protobuf.MessageOfTeam;
      reader.readMessage(value,proto.protobuf.MessageOfTeam.deserializeBinaryFromReader);
      msg.setTeamMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShipMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf.MessageOfShip.serializeBinaryToWriter
    );
  }
  f = message.getBulletMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf.MessageOfBullet.serializeBinaryToWriter
    );
  }
  f = message.getFactoryMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfFactory.serializeBinaryToWriter
    );
  }
  f = message.getCommunityMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf.MessageOfCommunity.serializeBinaryToWriter
    );
  }
  f = message.getFortMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protobuf.MessageOfFort.serializeBinaryToWriter
    );
  }
  f = message.getWormholeMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.protobuf.MessageOfWormhole.serializeBinaryToWriter
    );
  }
  f = message.getHomeMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.protobuf.MessageOfHome.serializeBinaryToWriter
    );
  }
  f = message.getResourceMessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.protobuf.MessageOfResource.serializeBinaryToWriter
    );
  }
  f = message.getMapMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.protobuf.MessageOfMap.serializeBinaryToWriter
    );
  }
  f = message.getNewsMessage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.protobuf.MessageOfNews.serializeBinaryToWriter
    );
  }
  f = message.getBombedBulletMessage();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter
    );
  }
  f = message.getTeamMessage();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.protobuf.MessageOfTeam.serializeBinaryToWriter
    );
  }
};


/**
 * optional MessageOfShip ship_message = 1;
 * @return {?proto.protobuf.MessageOfShip}
 */
proto.protobuf.MessageOfObj.prototype.getShipMessage = function() {
  return /** @type{?proto.protobuf.MessageOfShip} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfShip, 1));
};


/**
 * @param {?proto.protobuf.MessageOfShip|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setShipMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearShipMessage = function() {
  return this.setShipMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasShipMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MessageOfBullet bullet_message = 2;
 * @return {?proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfObj.prototype.getBulletMessage = function() {
  return /** @type{?proto.protobuf.MessageOfBullet} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfBullet, 2));
};


/**
 * @param {?proto.protobuf.MessageOfBullet|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setBulletMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearBulletMessage = function() {
  return this.setBulletMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasBulletMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MessageOfFactory factory_message = 3;
 * @return {?proto.protobuf.MessageOfFactory}
 */
proto.protobuf.MessageOfObj.prototype.getFactoryMessage = function() {
  return /** @type{?proto.protobuf.MessageOfFactory} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfFactory, 3));
};


/**
 * @param {?proto.protobuf.MessageOfFactory|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setFactoryMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearFactoryMessage = function() {
  return this.setFactoryMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasFactoryMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MessageOfCommunity community_message = 4;
 * @return {?proto.protobuf.MessageOfCommunity}
 */
proto.protobuf.MessageOfObj.prototype.getCommunityMessage = function() {
  return /** @type{?proto.protobuf.MessageOfCommunity} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfCommunity, 4));
};


/**
 * @param {?proto.protobuf.MessageOfCommunity|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setCommunityMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearCommunityMessage = function() {
  return this.setCommunityMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasCommunityMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MessageOfFort fort_message = 5;
 * @return {?proto.protobuf.MessageOfFort}
 */
proto.protobuf.MessageOfObj.prototype.getFortMessage = function() {
  return /** @type{?proto.protobuf.MessageOfFort} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfFort, 5));
};


/**
 * @param {?proto.protobuf.MessageOfFort|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setFortMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearFortMessage = function() {
  return this.setFortMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasFortMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MessageOfWormhole wormhole_message = 6;
 * @return {?proto.protobuf.MessageOfWormhole}
 */
proto.protobuf.MessageOfObj.prototype.getWormholeMessage = function() {
  return /** @type{?proto.protobuf.MessageOfWormhole} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfWormhole, 6));
};


/**
 * @param {?proto.protobuf.MessageOfWormhole|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setWormholeMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearWormholeMessage = function() {
  return this.setWormholeMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasWormholeMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MessageOfHome home_message = 7;
 * @return {?proto.protobuf.MessageOfHome}
 */
proto.protobuf.MessageOfObj.prototype.getHomeMessage = function() {
  return /** @type{?proto.protobuf.MessageOfHome} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfHome, 7));
};


/**
 * @param {?proto.protobuf.MessageOfHome|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setHomeMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearHomeMessage = function() {
  return this.setHomeMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasHomeMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional MessageOfResource resource_message = 8;
 * @return {?proto.protobuf.MessageOfResource}
 */
proto.protobuf.MessageOfObj.prototype.getResourceMessage = function() {
  return /** @type{?proto.protobuf.MessageOfResource} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfResource, 8));
};


/**
 * @param {?proto.protobuf.MessageOfResource|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setResourceMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearResourceMessage = function() {
  return this.setResourceMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasResourceMessage = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MessageOfMap map_message = 9;
 * @return {?proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfObj.prototype.getMapMessage = function() {
  return /** @type{?proto.protobuf.MessageOfMap} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfMap, 9));
};


/**
 * @param {?proto.protobuf.MessageOfMap|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setMapMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearMapMessage = function() {
  return this.setMapMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasMapMessage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional MessageOfNews news_message = 10;
 * @return {?proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfObj.prototype.getNewsMessage = function() {
  return /** @type{?proto.protobuf.MessageOfNews} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfNews, 10));
};


/**
 * @param {?proto.protobuf.MessageOfNews|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setNewsMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearNewsMessage = function() {
  return this.setNewsMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasNewsMessage = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MessageOfBombedBullet bombed_bullet_message = 11;
 * @return {?proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfObj.prototype.getBombedBulletMessage = function() {
  return /** @type{?proto.protobuf.MessageOfBombedBullet} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfBombedBullet, 11));
};


/**
 * @param {?proto.protobuf.MessageOfBombedBullet|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setBombedBulletMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearBombedBulletMessage = function() {
  return this.setBombedBulletMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasBombedBulletMessage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional MessageOfTeam team_message = 12;
 * @return {?proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfObj.prototype.getTeamMessage = function() {
  return /** @type{?proto.protobuf.MessageOfTeam} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfTeam, 12));
};


/**
 * @param {?proto.protobuf.MessageOfTeam|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setTeamMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearTeamMessage = function() {
  return this.setTeamMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasTeamMessage = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfAll.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfAll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfAll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAll.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    redTeamScore: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blueTeamScore: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfAll;
  return proto.protobuf.MessageOfAll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfAll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRedTeamScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlueTeamScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfAll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfAll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfAll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRedTeamScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlueTeamScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 game_time = 1;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getGameTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setGameTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 red_team_score = 2;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getRedTeamScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setRedTeamScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 blue_team_score = 3;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getBlueTeamScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setBlueTeamScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageToClient.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageToClient.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageToClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageToClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageToClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    objMessageList: jspb.Message.toObjectList(msg.getObjMessageList(),
    proto.protobuf.MessageOfObj.toObject, includeInstance),
    gameState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    allMessage: (f = msg.getAllMessage()) && proto.protobuf.MessageOfAll.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageToClient;
  return proto.protobuf.MessageToClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageToClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfObj;
      reader.readMessage(value,proto.protobuf.MessageOfObj.deserializeBinaryFromReader);
      msg.addObjMessage(value);
      break;
    case 2:
      var value = /** @type {!proto.protobuf.GameState} */ (reader.readEnum());
      msg.setGameState(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfAll;
      reader.readMessage(value,proto.protobuf.MessageOfAll.deserializeBinaryFromReader);
      msg.setAllMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageToClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageToClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageToClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageToClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.MessageOfObj.serializeBinaryToWriter
    );
  }
  f = message.getGameState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAllMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfAll.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MessageOfObj obj_message = 1;
 * @return {!Array<!proto.protobuf.MessageOfObj>}
 */
proto.protobuf.MessageToClient.prototype.getObjMessageList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfObj, 1));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfObj>} value
 * @return {!proto.protobuf.MessageToClient} returns this
*/
proto.protobuf.MessageToClient.prototype.setObjMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.MessageOfObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageToClient.prototype.addObjMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.MessageOfObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearObjMessageList = function() {
  return this.setObjMessageList([]);
};


/**
 * optional GameState game_state = 2;
 * @return {!proto.protobuf.GameState}
 */
proto.protobuf.MessageToClient.prototype.getGameState = function() {
  return /** @type {!proto.protobuf.GameState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.protobuf.GameState} value
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.setGameState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional MessageOfAll all_message = 3;
 * @return {?proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageToClient.prototype.getAllMessage = function() {
  return /** @type{?proto.protobuf.MessageOfAll} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfAll, 3));
};


/**
 * @param {?proto.protobuf.MessageOfAll|undefined} value
 * @return {!proto.protobuf.MessageToClient} returns this
*/
proto.protobuf.MessageToClient.prototype.setAllMessage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearAllMessage = function() {
  return this.setAllMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageToClient.prototype.hasAllMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MoveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MoveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MoveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MoveRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualSpeed: jspb.Message.getFieldWithDefault(msg, 1, 0),
    actualAngle: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MoveRes;
  return proto.protobuf.MoveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MoveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActualSpeed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setActualAngle(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MoveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MoveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MoveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MoveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualSpeed();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getActualAngle();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 actual_speed = 1;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double actual_angle = 2;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualAngle = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool act_success = 3;
 * @return {boolean}
 */
proto.protobuf.MoveRes.prototype.getActSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.BoolRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.BoolRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.BoolRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.BoolRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.BoolRes;
  return proto.protobuf.BoolRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.BoolRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.BoolRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.BoolRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.BoolRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.BoolRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool act_success = 1;
 * @return {boolean}
 */
proto.protobuf.BoolRes.prototype.getActSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.BoolRes} returns this
 */
proto.protobuf.BoolRes.prototype.setActSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.ShipInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.ShipInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.ShipInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.ShipInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.ShipInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    shipInfoList: jspb.Message.toObjectList(msg.getShipInfoList(),
    proto.protobuf.MessageOfShip.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.ShipInfoRes}
 */
proto.protobuf.ShipInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.ShipInfoRes;
  return proto.protobuf.ShipInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.ShipInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.ShipInfoRes}
 */
proto.protobuf.ShipInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfShip;
      reader.readMessage(value,proto.protobuf.MessageOfShip.deserializeBinaryFromReader);
      msg.addShipInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.ShipInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.ShipInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.ShipInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.ShipInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShipInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.MessageOfShip.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MessageOfShip ship_info = 1;
 * @return {!Array<!proto.protobuf.MessageOfShip>}
 */
proto.protobuf.ShipInfoRes.prototype.getShipInfoList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfShip>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfShip, 1));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfShip>} value
 * @return {!proto.protobuf.ShipInfoRes} returns this
*/
proto.protobuf.ShipInfoRes.prototype.setShipInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.MessageOfShip=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfShip}
 */
proto.protobuf.ShipInfoRes.prototype.addShipInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.MessageOfShip, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.ShipInfoRes} returns this
 */
proto.protobuf.ShipInfoRes.prototype.clearShipInfoList = function() {
  return this.setShipInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.EcoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.EcoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.EcoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.EcoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    economy: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.EcoRes}
 */
proto.protobuf.EcoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.EcoRes;
  return proto.protobuf.EcoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.EcoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.EcoRes}
 */
proto.protobuf.EcoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEconomy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.EcoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.EcoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.EcoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.EcoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEconomy();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 economy = 1;
 * @return {number}
 */
proto.protobuf.EcoRes.prototype.getEconomy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.EcoRes} returns this
 */
proto.protobuf.EcoRes.prototype.setEconomy = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfNews.oneofGroups_ = [[1,4]];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfNews.NewsCase = {
  NEWS_NOT_SET: 0,
  TEXT_MESSAGE: 1,
  BINARY_MESSAGE: 4
};

/**
 * @return {proto.protobuf.MessageOfNews.NewsCase}
 */
proto.protobuf.MessageOfNews.prototype.getNewsCase = function() {
  return /** @type {proto.protobuf.MessageOfNews.NewsCase} */(jspb.Message.computeOneofCase(this, proto.protobuf.MessageOfNews.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfNews.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfNews.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfNews} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfNews.toObject = function(includeInstance, msg) {
  var f, obj = {
    textMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    binaryMessage: msg.getBinaryMessage_asB64(),
    fromId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfNews;
  return proto.protobuf.MessageOfNews.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfNews} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextMessage(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinaryMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfNews.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfNews} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfNews.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFromId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getToId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string text_message = 1;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getTextMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setTextMessage = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.protobuf.MessageOfNews.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearTextMessage = function() {
  return jspb.Message.setOneofField(this, 1, proto.protobuf.MessageOfNews.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasTextMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes binary_message = 4;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes binary_message = 4;
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinaryMessage()));
};


/**
 * optional bytes binary_message = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinaryMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setBinaryMessage = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.protobuf.MessageOfNews.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearBinaryMessage = function() {
  return jspb.Message.setOneofField(this, 4, proto.protobuf.MessageOfNews.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasBinaryMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 from_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getFromId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setFromId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 to_id = 3;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getToId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setToId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.protobuf);
