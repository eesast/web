# 查询某ID用户是否为某比赛管理员
query QueryContestManager($contest_id: uuid!, $user_id: String="") {
  contest_manager(where: {contest_id: {_eq: $contest_id}, user_id: {_eq: $user_id}}) {
    user_id
  }
}

#插入队伍信息
mutation InsertTeam(
 $team_name: String!
 $team_intro: String = ""  # 此处的intro可以为NULL
 $team_leader: String!   # team_leader的_id
 $invited_code: String!
 $contest_id: uuid!  # 比赛名称是必填的项
) {
 insert_contest_team(
   objects: {
     team_name: $team_name
     team_intro: $team_intro
     team_leader: $team_leader
     invited_code: $invited_code
     contest_id: $contest_id
   }
 ) {
   # returning {
   #   team_id
   #   team_name
   #   team_sum
   #   team_leader
   # }
   affected_rows  # 即commit
 }
}#

# 判断是否是某次比赛的leader并返回team_id#

query IsTeamLeader($_id: String!, $contest_id: uuid!) {
  contest_team(where: {team_leader_id: {_id: {_eq: $_id}}, _and: {contest_id: {_eq: $contest_id}}}) {
    team_id
  }
}
# 判断是否是member返回id
query IsTeamMember($_id: String!, $contest_id: uuid!) {
  contest_team_member(where: {user_id: {_eq: $_id}, _and: {team_as_contest_team_member: {contest_id: {_eq: $contest_id}}}}) {
    team_id
  }
}
# 借由team_id获取team的所有信息
query GetTeamInfo($team_id: uuid!) {
  contest_team(where: {team_id: {_eq: $team_id}}) {
    contest_id
    contest_team_members {
      user_id
    }
    invited_code
    member_num
    team_name
    team_intro
    team_leader
    score
    team_leader_id {
      name
      _id
    }
  }
}

# 借由team_id获取code的所有信息
query GetCode($team_id: uuid!) {
 contest_code(where: {team_id: {_eq: $team_id}}) {
   code1
   code2
   code3
   code4
   code5
   code6
 }
}

query GetAllTeamInfo($contest_id: uuid!) {
  contest_team(where: {contest_id: {_eq: $contest_id}}) {
    team_name
    created_at
    invited_code
    member_num
    score
    status
    status2
    status3
    team_id
    team_contest_id {
      contest_name
    }
    team_intro
    team_leader_id {
      _id
      class
      email
      name
      phone
    }
    contest_team_members {
      user_as_contest_team_member {
        _id
        class
        email
        name
        phone
      }
    }
  }
}


#插入队员
mutation InsertTeamMember($team_id: uuid! , $user_id: String!) {
  insert_contest_team_member(objects: {team_id: $team_id, user_id: $user_id}) {
    affected_rows
  }
}

#更新队伍信息
mutation UpdateTeam($team_id: uuid!, $team_intro: String!, $team_name: String!) {
  update_contest_team(where: {team_id: {_eq: $team_id}}, _set: {team_intro: $team_intro, team_name: $team_name}) {
    affected_rows
  }
}

#根据队伍id查询所有队员信息
query GetMemberInfo($team_id: uuid!) {
  contest_team(where: {team_id: {_eq: $team_id } }) {
    team_leader_id {
      name
      id
      _id
    }
  }
  contest_team_member(where: {team_id: {_eq: $team_id } }) {
    user_as_contest_team_member {
      id
      _id
      name
    }
  }
}

#在contest_team中删除队伍
mutation DeleteTeam($team_id: uuid!) {
  delete_contest_team(where: {team_id: {_eq: $team_id}}) {
    affected_rows
  }
}
#在team_member中删除所有队员信息
mutation DeleteAllTeamMember($team_id: uuid!) {
  delete_contest_team_member(where: {team_id: {_eq: $team_id}}) {
    affected_rows
  }
}

#在team_member中删除指定队员信息
mutation DeleteTeamMember($user_id: String!) {
  delete_contest_team_member(where: { user_id: { _eq: $user_id } }) {
    affected_rows
  }
}

# 获取所有比赛
query GetAllContest {
  contest {
    id
    contest_name
    description
    start_date
    end_date
  }
}

# 根据比赛id获取比赛信息
query GetContestInfo($contest_id: uuid!) {
  contest(where: {id: {_eq: $contest_id}}) {
    contest_name
    contest_type
    description
  }
}


#intropage用 现在换成contest_intro了
query GetIntroContent($id: Int!) {
  article(where: { id: { _eq: $id } }) {
    content
  }
}
#updateIntro
mutation UpdateIntro($id: Int!, $content: String = "") {
  update_article(where: { id: { _eq: $id } }, _set: { content: $content }) {
    affected_rows
  }
}
#insert thuaicode
mutation InsertCode($team_id: uuid!) {
  insert_thuai_code(objects: { team_id: $team_id }) {
    affected_rows
  }
}
##roominfo
##query GetRoomInfo {
##  thuai_room {
##    thuai_room_teams {
##      thuai_team {
##        team_name
##      }
##    }
##    room_id
##    result
##    status
##    created_at
##    show_id
##  }
##}
#insert team into room
mutation InsertRoom($team1_id: uuid, $team2_id: uuid) {
  insert_thuai_room_one(
    object: {
      thuai_room_teams: {
        data: [{ thuai_team_id: $team1_id }, { thuai_team_id: $team2_id }]
      }
    }
  ) {
    room_id
  }
}


#上传选手代码（原有：更新，无：插入）
mutation UpsertCode1(
  $code: String = ""
  $team_id: uuid!
) {
  insert_thuai_code_one(
    object: {
      code_1: $code
      team_id: $team_id
    }
    on_conflict: {
      constraint: thuai_code_pkey
      update_columns: [code_1]
    }
  ) {
    team_id
  }
}

mutation UpsertCode2(
  $code: String = ""
  $team_id: uuid!
) {
  insert_thuai_code_one(
    object: {
      code_2: $code
      team_id: $team_id
    }
    on_conflict: {
      constraint: thuai_code_pkey
      update_columns: [code_2]
    }
  ) {
    team_id
  }
}

mutation UpsertCode3(
  $code: String = ""
  $team_id: uuid!
) {
  insert_thuai_code_one(
    object: {
      code_3: $code
      team_id: $team_id
    }
    on_conflict: {
      constraint: thuai_code_pkey
      update_columns: [code_3]
    }
  ) {
    team_id
  }
}

mutation UpsertCode4(
  $code: String = ""
  $team_id: uuid!
) {
  insert_thuai_code_one(
    object: {
      code_4: $code
      team_id: $team_id
    }
    on_conflict: {
      constraint: thuai_code_pkey
      update_columns: [code_4]
    }
  ) {
    team_id
  }
}
