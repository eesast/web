# 主要操作对象：contest_room和contest_room_team表

# 增：由后端自动创建

# 删：暂不提供

# 改：暂不提供

# 查
subscription GetArenaRooms($contest_id: uuid!) {
  contest_room(
    where: {
      _and: { contest_id: { _eq: $contest_id }, round_id: { _is_null: true } }
    }
    order_by: { created_at: desc }
  ) {
    room_id
    status
    port
    created_at
    contest_room_teams {
      contest_team {
        team_name
        team_leader {
          realname
        }
      }
      score
      team_label
      player_roles
    }
  }
}

query GetRunningArenaRooms($contest_id: uuid!) {
  contest_room(
    where: {
      _and: {
        contest_id: { _eq: $contest_id }
        round_id: { _is_null: true }
        status: { _in: ["Waiting", "Running"] }
      }
    }
  ) {
    status
    created_at
    contest_room_teams {
      contest_team {
        team_id
      }
    }
  }
}

subscription GetCompetitionRooms($contest_id: uuid!, $round_id: uuid!) {
  contest_room(
    where: {
      _and: { contest_id: { _eq: $contest_id }, round_id: { _eq: $round_id } }
    }
    order_by: { created_at: desc }
  ) {
    room_id
    status
    port
    created_at
    contest_room_teams {
      contest_team {
        team_name
        team_leader {
          realname
        }
      }
      score
      team_label
      player_roles
    }
  }
}

# TODO：迁移到GetArenaRooms
subscription GetRoomInfo($contest_id: uuid!) {
  contest_room(
    where: { contest_id: { _eq: $contest_id } }
    order_by: { created_at: desc }
  ) {
    created_at
    result
    room_id
    status
    port
    contest_room_teams {
      contest_team {
        team_name
        team_id
        score
      }
    }
  }
}

# TODO：迁移到GetRunningArenaRooms
query GetRoomInfo_status($contest_id: uuid!) {
  contest_room(
    where: {
      _and: {
        contest_id: { _eq: $contest_id }
        status: { _eq: "false" }
        port: { _is_null: false }
      }
    }
  ) {
    room_id
    status
    created_at
  }
}

# TODO：计划废弃
mutation InsertRoom(
  $contest_id: uuid!
  $team1_id: uuid!
  $team2_id: uuid!
  $created_at: timestamptz!
) {
  insert_contest_room_one(
    object: {
      contest_id: $contest_id
      contest_room_teams: {
        data: [{ team_id: $team1_id }, { team_id: $team2_id }]
      }
      created_at: $created_at
    }
  ) {
    room_id
  }
}
