# 主要操作对象：contest_team 和 contest_team_member表

# 增
mutation AddTeam(
  $team_name: String!
  $team_intro: String = "" # 此处的intro可以为NULL
  $team_leader_uuid: uuid! # team_leader的uuid
  $invited_code: String!
  $contest_id: uuid! # 比赛名称是必填的项
) {
  insert_contest_team_one(
    object: {
      team_name: $team_name
      team_intro: $team_intro
      team_leader_uuid: $team_leader_uuid
      invited_code: $invited_code
      contest_id: $contest_id
      contest_team_members: { data: { user_uuid: $team_leader_uuid } }
    }
  ) {
    team_id
  }
}

mutation AddTeamMember($team_id: uuid!, $user_uuid: uuid!) {
  insert_contest_team_member_one(
    object: { team_id: $team_id, user_uuid: $user_uuid }
  ) {
    team_id
  }
}

# 删
mutation DeleteTeam($team_id: uuid!) {
  delete_contest_team_by_pk(team_id: $team_id) {
    team_id
  }
}

mutation DeleteTeamMember($user_uuid: uuid!, $team_id: uuid!) {
  delete_contest_team_member_by_pk(user_uuid: $user_uuid, team_id: $team_id) {
    team_id
  }
}

# 改
mutation UpdateTeam(
  $team_id: uuid!
  $team_name: String!
  $team_intro: String!
) {
  update_contest_team_by_pk(
    pk_columns: { team_id: $team_id }
    _set: { team_name: $team_name, team_intro: $team_intro }
  ) {
    team_id
  }
}

# 查
query GetTeam($user_uuid: uuid!, $contest_id: uuid!) {
  contest_team_member(
    where: {
      user_uuid: { _eq: $user_uuid }
      contest_team: { contest_id: { _eq: $contest_id } }
    }
  ) {
    contest_team {
      team_id
    }
  }
}

query GetTeamInfo($team_id: uuid!) {
  contest_team_by_pk(team_id: $team_id) {
    team_name
    team_intro
    invited_code
    team_leader {
      uuid
      realname
    }
    contest_team_members {
      user {
        realname
        student_no
        class
      }
    }
  }
}

query GetTeamInfoByInvitedCode($invited_code: String!, $contest_id: uuid!) {
  contest_team(
    where: {
      invited_code: { _eq: $invited_code }
      contest_id: { _eq: $contest_id }
    }
  ) {
    team_id
    team_name
    team_intro
    team_leader {
      realname
    }
  }
}

query getTeamStat($team_id: uuid!) {
  contest_team_by_pk(team_id: $team_id) {
    contest_team_codes_aggregate {
      aggregate {
        count
      }
    }
    contest_team_rooms_aggregate(
      where: { contest_room: { round_id: { _is_null: true } } }
    ) {
      aggregate {
        count
        sum {
          score
        }
      }
    }
  }
}

query getTotalTeamNum($contest_id: uuid!) {
  contest_team_aggregate(where: { contest: { id: { _eq: $contest_id } } }) {
    aggregate {
      count
    }
  }
}

query getTotalMemberNum($contest_id: uuid!) {
  contest_team_member_aggregate(
    where: { contest_team: { contest: { id: { _eq: $contest_id } } } }
  ) {
    aggregate {
      count
    }
  }
}

query getTeams($contest_id: uuid!) {
  contest_team(
    where: { contest_id: { _eq: $contest_id } }
    order_by: {
      contest_team_rooms_aggregate: { sum: { score: desc_nulls_last } }
    }
  ) {
    team_id
    team_name
    team_intro
    team_leader {
      realname
      student_no
      class
      uuid
    }
    contest_team_members {
      user {
        realname
        student_no
        class
        uuid
        department
        tsinghua_email
      }
    }
    contest_team_codes_aggregate {
      aggregate {
        count
      }
    }
    contest_team_rooms_aggregate(
      where: { contest_room: { round_id: { _is_null: true } } }
    ) {
      aggregate {
        count
        sum {
          score
        }
      }
    }
    contest_team_players_aggregate(
      where: {
        player_code: { compile_status: { _in: ["No Need", "Completed"] } }
      }
    ) {
      aggregate {
        count
      }
    }
  }
}

query getTeamsCompetitionResult($contest_id: uuid!, $round_id: uuid!) {
  contest_round_by_pk(round_id: $round_id) {
    name
  }
  contest_team(where: { contest_id: { _eq: $contest_id } }) {
    team_id
    team_name
    contest_team_members {
      user {
        realname
        student_no
        class
      }
    }
    contest_team_rooms_aggregate(
      where: {
        contest_room: {
          _and: { round_id: { _eq: $round_id }, status: { _eq: "Finished" } }
        }
      }
    ) {
      aggregate {
        count
        sum {
          score
        }
      }
    }
  }
}
