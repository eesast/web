# 主要操作对象：contest表

# 增：管理员手动操作

# # 添加比赛
# mutation AddContest(
#   $start_date: timestamptz!
#   $end_date: timestamptz!
#   $description: String = ""
#   $contest_name: String!
#   $contest_type: String!
# ) {
#   insert_contest(
#     objects: {
#       contest_name: $contest_name
#       description: $description
#       end_date: $end_date
#       start_date: $start_date
#       contest_type: $contest_type
#     }
#   ) {
#     returning {
#       id
#     }
#   }
# }

# 删
mutation DeleteContest($contest_id: uuid!) {
  delete_contest_by_pk(id: $contest_id) {
    id
  }
}

# 改
mutation UpdateContestInfo(
  $contest_id: uuid!
  $contest_name: String!
  $name: String!
  $description: String
  $start_date: timestamptz!
  $end_date: timestamptz!
) {
  update_contest_by_pk(
    pk_columns: { id: $contest_id }
    _set: {
      contest_name: $contest_name
      name: $name
      description: $description
      start_date: $start_date
      end_date: $end_date
    }
  ) {
    id
  }
}

mutation UpdateContestSwitch(
  $contest_id: uuid!
  $code_upload_switch: Boolean!
  $arena_switch: Boolean!
  $playground_switch: Boolean!
  $stream_switch: Boolean!
  $playback_switch: Boolean!
) {
  update_contest_by_pk(
    pk_columns: { id: $contest_id }
    _set: {
      code_upload_switch: $code_upload_switch
      arena_switch: $arena_switch
      playground_switch: $playground_switch
      stream_switch: $stream_switch
      playback_switch: $playback_switch
    }
  ) {
    id
  }
}

# 查

query GetContests {
  contest(order_by: { start_date: desc }) {
    contest_name
    description
    end_date
    id
    start_date
    contest_type
  }
}

query GetContestInfo($contest_id: uuid!) {
  contest_by_pk(id: $contest_id) {
    contest_name
    name
    description
    start_date
    end_date
    # TODO: To be deleted
    status
  }
}

subscription GetContestSwitch($contest_id: uuid!) {
  contest_by_pk(id: $contest_id) {
    code_upload_switch
    arena_switch
    playground_switch
    stream_switch
    playback_switch
  }
}

# TODO: 改为 UpdateContestInfo
# 更新比赛信息
mutation UpdateContest(
  $id: uuid!
  $description: String = ""
  $contest_name: String!
  $end_date: timestamptz!
  $start_date: timestamptz!
  $contest_type: String!
) {
  update_contest(
    where: { id: { _eq: $id } }
    _set: {
      contest_name: $contest_name
      description: $description
      end_date: $end_date
      start_date: $start_date
      contest_type: $contest_type
    }
  ) {
    returning {
      id
    }
  }
}

# TODO: 改为 UpdateContestSwitch
# 更新比赛状态
mutation UpdateContestStatus($contest_id: uuid!, $status: String!) {
  update_contest(
    where: { id: { _eq: $contest_id } }
    _set: { status: $status }
  ) {
    returning {
      status
    }
  }
}
