// source: Message2Clients.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global =
  (typeof globalThis !== "undefined" && globalThis) ||
  (typeof window !== "undefined" && window) ||
  (typeof global !== "undefined" && global) ||
  (typeof self !== "undefined" && self) ||
  function () {
    return this;
  }.call(null) ||
  Function("return this")();

var MessageType_pb = require("./MessageType_pb.js");
goog.object.extend(proto, MessageType_pb);
goog.exportSymbol("proto.protobuf.BoolRes", null, global);
goog.exportSymbol("proto.protobuf.MessageOfAll", null, global);
goog.exportSymbol("proto.protobuf.MessageOfBombedBullet", null, global);
goog.exportSymbol("proto.protobuf.MessageOfBullet", null, global);
goog.exportSymbol("proto.protobuf.MessageOfChest", null, global);
goog.exportSymbol("proto.protobuf.MessageOfClassroom", null, global);
goog.exportSymbol("proto.protobuf.MessageOfDoor", null, global);
goog.exportSymbol("proto.protobuf.MessageOfGate", null, global);
goog.exportSymbol("proto.protobuf.MessageOfHiddenGate", null, global);
goog.exportSymbol("proto.protobuf.MessageOfMap", null, global);
goog.exportSymbol("proto.protobuf.MessageOfMap.Row", null, global);
goog.exportSymbol("proto.protobuf.MessageOfNews", null, global);
goog.exportSymbol("proto.protobuf.MessageOfNews.NewsCase", null, global);
goog.exportSymbol("proto.protobuf.MessageOfObj", null, global);
goog.exportSymbol("proto.protobuf.MessageOfObj.MessageOfObjCase", null, global);
goog.exportSymbol("proto.protobuf.MessageOfPickedProp", null, global);
goog.exportSymbol("proto.protobuf.MessageOfProp", null, global);
goog.exportSymbol("proto.protobuf.MessageOfStudent", null, global);
goog.exportSymbol("proto.protobuf.MessageOfTricker", null, global);
goog.exportSymbol("proto.protobuf.MessageToClient", null, global);
goog.exportSymbol("proto.protobuf.MoveRes", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfStudent = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.MessageOfStudent.repeatedFields_,
    null,
  );
};
goog.inherits(proto.protobuf.MessageOfStudent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfStudent.displayName =
    "proto.protobuf.MessageOfStudent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfTricker = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.MessageOfTricker.repeatedFields_,
    null,
  );
};
goog.inherits(proto.protobuf.MessageOfTricker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfTricker.displayName =
    "proto.protobuf.MessageOfTricker";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfBullet = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfBullet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfBullet.displayName = "proto.protobuf.MessageOfBullet";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfBombedBullet = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfBombedBullet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfBombedBullet.displayName =
    "proto.protobuf.MessageOfBombedBullet";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfProp = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfProp.displayName = "proto.protobuf.MessageOfProp";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfPickedProp = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfPickedProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfPickedProp.displayName =
    "proto.protobuf.MessageOfPickedProp";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfClassroom = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfClassroom, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfClassroom.displayName =
    "proto.protobuf.MessageOfClassroom";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfGate = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfGate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfGate.displayName = "proto.protobuf.MessageOfGate";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfHiddenGate = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfHiddenGate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfHiddenGate.displayName =
    "proto.protobuf.MessageOfHiddenGate";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfDoor = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfDoor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfDoor.displayName = "proto.protobuf.MessageOfDoor";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfChest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfChest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfChest.displayName = "proto.protobuf.MessageOfChest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.MessageOfMap.repeatedFields_,
    null,
  );
};
goog.inherits(proto.protobuf.MessageOfMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.displayName = "proto.protobuf.MessageOfMap";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap.Row = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.MessageOfMap.Row.repeatedFields_,
    null,
  );
};
goog.inherits(proto.protobuf.MessageOfMap.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.Row.displayName =
    "proto.protobuf.MessageOfMap.Row";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfNews = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.protobuf.MessageOfNews.oneofGroups_,
  );
};
goog.inherits(proto.protobuf.MessageOfNews, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfNews.displayName = "proto.protobuf.MessageOfNews";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfObj = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.protobuf.MessageOfObj.oneofGroups_,
  );
};
goog.inherits(proto.protobuf.MessageOfObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfObj.displayName = "proto.protobuf.MessageOfObj";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfAll = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfAll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfAll.displayName = "proto.protobuf.MessageOfAll";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageToClient = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.protobuf.MessageToClient.repeatedFields_,
    null,
  );
};
goog.inherits(proto.protobuf.MessageToClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageToClient.displayName = "proto.protobuf.MessageToClient";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MoveRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MoveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MoveRes.displayName = "proto.protobuf.MoveRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.BoolRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.BoolRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.BoolRes.displayName = "proto.protobuf.BoolRes";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfStudent.repeatedFields_ = [6, 8, 25];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfStudent.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfStudent.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfStudent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfStudent.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        speed: jspb.Message.getFieldWithDefault(msg, 3, 0),
        determination: jspb.Message.getFieldWithDefault(msg, 4, 0),
        addiction: jspb.Message.getFieldWithDefault(msg, 5, 0),
        timeUntilSkillAvailableList:
          (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null
            ? undefined
            : f,
        propList:
          (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
        playerState: jspb.Message.getFieldWithDefault(msg, 9, 0),
        guid: jspb.Message.getFieldWithDefault(msg, 10, 0),
        bulletType: jspb.Message.getFieldWithDefault(msg, 12, 0),
        learningSpeed: jspb.Message.getFieldWithDefault(msg, 13, 0),
        treatSpeed: jspb.Message.getFieldWithDefault(msg, 14, 0),
        playerId: jspb.Message.getFieldWithDefault(msg, 15, 0),
        viewRange: jspb.Message.getFieldWithDefault(msg, 16, 0),
        radius: jspb.Message.getFieldWithDefault(msg, 17, 0),
        dangerAlert: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          19,
          0.0,
        ),
        score: jspb.Message.getFieldWithDefault(msg, 20, 0),
        treatProgress: jspb.Message.getFieldWithDefault(msg, 21, 0),
        rescueProgress: jspb.Message.getFieldWithDefault(msg, 22, 0),
        studentType: jspb.Message.getFieldWithDefault(msg, 23, 0),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          24,
          0.0,
        ),
        buffList:
          (f = jspb.Message.getRepeatedField(msg, 25)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfStudent}
 */
proto.protobuf.MessageOfStudent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfStudent();
  return proto.protobuf.MessageOfStudent.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfStudent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfStudent}
 */
proto.protobuf.MessageOfStudent.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSpeed(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDetermination(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAddiction(value);
        break;
      case 6:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited()
            ? reader.readPackedDouble()
            : [reader.readDouble()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addTimeUntilSkillAvailable(values[i]);
        }
        break;
      case 8:
        var values = /** @type {!Array<!proto.protobuf.PropType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addProp(values[i]);
        }
        break;
      case 9:
        var value = /** @type {!proto.protobuf.PlayerState} */ (
          reader.readEnum()
        );
        msg.setPlayerState(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setGuid(value);
        break;
      case 12:
        var value = /** @type {!proto.protobuf.BulletType} */ (
          reader.readEnum()
        );
        msg.setBulletType(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setLearningSpeed(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTreatSpeed(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPlayerId(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setViewRange(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRadius(value);
        break;
      case 19:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setDangerAlert(value);
        break;
      case 20:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setScore(value);
        break;
      case 21:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTreatProgress(value);
        break;
      case 22:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRescueProgress(value);
        break;
      case 23:
        var value = /** @type {!proto.protobuf.StudentType} */ (
          reader.readEnum()
        );
        msg.setStudentType(value);
        break;
      case 24:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 25:
        var values = /** @type {!Array<!proto.protobuf.StudentBuffType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addBuff(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfStudent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfStudent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfStudent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfStudent.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getDetermination();
  if (f !== 0) {
    writer.writeInt32(4, f);
  }
  f = message.getAddiction();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getTimeUntilSkillAvailableList();
  if (f.length > 0) {
    writer.writePackedDouble(6, f);
  }
  f = message.getPropList();
  if (f.length > 0) {
    writer.writePackedEnum(8, f);
  }
  f = message.getPlayerState();
  if (f !== 0.0) {
    writer.writeEnum(9, f);
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(10, f);
  }
  f = message.getBulletType();
  if (f !== 0.0) {
    writer.writeEnum(12, f);
  }
  f = message.getLearningSpeed();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getTreatSpeed();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(15, f);
  }
  f = message.getViewRange();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getRadius();
  if (f !== 0) {
    writer.writeInt32(17, f);
  }
  f = message.getDangerAlert();
  if (f !== 0.0) {
    writer.writeDouble(19, f);
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(20, f);
  }
  f = message.getTreatProgress();
  if (f !== 0) {
    writer.writeInt32(21, f);
  }
  f = message.getRescueProgress();
  if (f !== 0) {
    writer.writeInt32(22, f);
  }
  f = message.getStudentType();
  if (f !== 0.0) {
    writer.writeEnum(23, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(24, f);
  }
  f = message.getBuffList();
  if (f.length > 0) {
    writer.writePackedEnum(25, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 speed = 3;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional int32 determination = 4;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getDetermination = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setDetermination = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional int32 addiction = 5;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getAddiction = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setAddiction = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * repeated double time_until_skill_available = 6;
 * @return {!Array<number>}
 */
proto.protobuf.MessageOfStudent.prototype.getTimeUntilSkillAvailableList =
  function () {
    return /** @type {!Array<number>} */ (
      jspb.Message.getRepeatedFloatingPointField(this, 6)
    );
  };

/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setTimeUntilSkillAvailableList =
  function (value) {
    return jspb.Message.setField(this, 6, value || []);
  };

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.addTimeUntilSkillAvailable =
  function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.clearTimeUntilSkillAvailableList =
  function () {
    return this.setTimeUntilSkillAvailableList([]);
  };

/**
 * repeated PropType prop = 8;
 * @return {!Array<!proto.protobuf.PropType>}
 */
proto.protobuf.MessageOfStudent.prototype.getPropList = function () {
  return /** @type {!Array<!proto.protobuf.PropType>} */ (
    jspb.Message.getRepeatedField(this, 8)
  );
};

/**
 * @param {!Array<!proto.protobuf.PropType>} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setPropList = function (value) {
  return jspb.Message.setField(this, 8, value || []);
};

/**
 * @param {!proto.protobuf.PropType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.addProp = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.clearPropList = function () {
  return this.setPropList([]);
};

/**
 * optional PlayerState player_state = 9;
 * @return {!proto.protobuf.PlayerState}
 */
proto.protobuf.MessageOfStudent.prototype.getPlayerState = function () {
  return /** @type {!proto.protobuf.PlayerState} */ (
    jspb.Message.getFieldWithDefault(this, 9, 0)
  );
};

/**
 * @param {!proto.protobuf.PlayerState} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setPlayerState = function (value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};

/**
 * optional int64 guid = 10;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getGuid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setGuid = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional BulletType bullet_type = 12;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfStudent.prototype.getBulletType = function () {
  return /** @type {!proto.protobuf.BulletType} */ (
    jspb.Message.getFieldWithDefault(this, 12, 0)
  );
};

/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setBulletType = function (value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};

/**
 * optional int32 learning_speed = 13;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getLearningSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setLearningSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 treat_speed = 14;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getTreatSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setTreatSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional int64 player_id = 15;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getPlayerId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setPlayerId = function (value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};

/**
 * optional int32 view_range = 16;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getViewRange = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setViewRange = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional int32 radius = 17;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getRadius = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setRadius = function (value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};

/**
 * optional double danger_alert = 19;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getDangerAlert = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setDangerAlert = function (value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};

/**
 * optional int32 score = 20;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getScore = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setScore = function (value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};

/**
 * optional int32 treat_progress = 21;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getTreatProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setTreatProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};

/**
 * optional int32 rescue_progress = 22;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getRescueProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setRescueProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};

/**
 * optional StudentType student_type = 23;
 * @return {!proto.protobuf.StudentType}
 */
proto.protobuf.MessageOfStudent.prototype.getStudentType = function () {
  return /** @type {!proto.protobuf.StudentType} */ (
    jspb.Message.getFieldWithDefault(this, 23, 0)
  );
};

/**
 * @param {!proto.protobuf.StudentType} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setStudentType = function (value) {
  return jspb.Message.setProto3EnumField(this, 23, value);
};

/**
 * optional double facing_direction = 24;
 * @return {number}
 */
proto.protobuf.MessageOfStudent.prototype.getFacingDirection = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setFacingDirection = function (
  value,
) {
  return jspb.Message.setProto3FloatField(this, 24, value);
};

/**
 * repeated StudentBuffType buff = 25;
 * @return {!Array<!proto.protobuf.StudentBuffType>}
 */
proto.protobuf.MessageOfStudent.prototype.getBuffList = function () {
  return /** @type {!Array<!proto.protobuf.StudentBuffType>} */ (
    jspb.Message.getRepeatedField(this, 25)
  );
};

/**
 * @param {!Array<!proto.protobuf.StudentBuffType>} value
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.setBuffList = function (value) {
  return jspb.Message.setField(this, 25, value || []);
};

/**
 * @param {!proto.protobuf.StudentBuffType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.addBuff = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 25, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfStudent} returns this
 */
proto.protobuf.MessageOfStudent.prototype.clearBuffList = function () {
  return this.setBuffList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfTricker.repeatedFields_ = [5, 7, 19];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfTricker.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfTricker.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfTricker} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfTricker.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        speed: jspb.Message.getFieldWithDefault(msg, 3, 0),
        timeUntilSkillAvailableList:
          (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null
            ? undefined
            : f,
        propList:
          (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
        trickerType: jspb.Message.getFieldWithDefault(msg, 8, 0),
        guid: jspb.Message.getFieldWithDefault(msg, 9, 0),
        score: jspb.Message.getFieldWithDefault(msg, 10, 0),
        playerId: jspb.Message.getFieldWithDefault(msg, 11, 0),
        viewRange: jspb.Message.getFieldWithDefault(msg, 12, 0),
        radius: jspb.Message.getFieldWithDefault(msg, 13, 0),
        playerState: jspb.Message.getFieldWithDefault(msg, 14, 0),
        trickDesire: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          15,
          0.0,
        ),
        classVolume: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          16,
          0.0,
        ),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          17,
          0.0,
        ),
        bulletType: jspb.Message.getFieldWithDefault(msg, 18, 0),
        buffList:
          (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfTricker}
 */
proto.protobuf.MessageOfTricker.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfTricker();
  return proto.protobuf.MessageOfTricker.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfTricker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfTricker}
 */
proto.protobuf.MessageOfTricker.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSpeed(value);
        break;
      case 5:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited()
            ? reader.readPackedDouble()
            : [reader.readDouble()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addTimeUntilSkillAvailable(values[i]);
        }
        break;
      case 7:
        var values = /** @type {!Array<!proto.protobuf.PropType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addProp(values[i]);
        }
        break;
      case 8:
        var value = /** @type {!proto.protobuf.TrickerType} */ (
          reader.readEnum()
        );
        msg.setTrickerType(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setGuid(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setScore(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPlayerId(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setViewRange(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRadius(value);
        break;
      case 14:
        var value = /** @type {!proto.protobuf.PlayerState} */ (
          reader.readEnum()
        );
        msg.setPlayerState(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setTrickDesire(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setClassVolume(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 18:
        var value = /** @type {!proto.protobuf.BulletType} */ (
          reader.readEnum()
        );
        msg.setBulletType(value);
        break;
      case 19:
        var values = /** @type {!Array<!proto.protobuf.TrickerBuffType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addBuff(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfTricker.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfTricker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfTricker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTricker.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getTimeUntilSkillAvailableList();
  if (f.length > 0) {
    writer.writePackedDouble(5, f);
  }
  f = message.getPropList();
  if (f.length > 0) {
    writer.writePackedEnum(7, f);
  }
  f = message.getTrickerType();
  if (f !== 0.0) {
    writer.writeEnum(8, f);
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(9, f);
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(11, f);
  }
  f = message.getViewRange();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getRadius();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getPlayerState();
  if (f !== 0.0) {
    writer.writeEnum(14, f);
  }
  f = message.getTrickDesire();
  if (f !== 0.0) {
    writer.writeDouble(15, f);
  }
  f = message.getClassVolume();
  if (f !== 0.0) {
    writer.writeDouble(16, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(17, f);
  }
  f = message.getBulletType();
  if (f !== 0.0) {
    writer.writeEnum(18, f);
  }
  f = message.getBuffList();
  if (f.length > 0) {
    writer.writePackedEnum(19, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 speed = 3;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * repeated double time_until_skill_available = 5;
 * @return {!Array<number>}
 */
proto.protobuf.MessageOfTricker.prototype.getTimeUntilSkillAvailableList =
  function () {
    return /** @type {!Array<number>} */ (
      jspb.Message.getRepeatedFloatingPointField(this, 5)
    );
  };

/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setTimeUntilSkillAvailableList =
  function (value) {
    return jspb.Message.setField(this, 5, value || []);
  };

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.addTimeUntilSkillAvailable =
  function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.clearTimeUntilSkillAvailableList =
  function () {
    return this.setTimeUntilSkillAvailableList([]);
  };

/**
 * repeated PropType prop = 7;
 * @return {!Array<!proto.protobuf.PropType>}
 */
proto.protobuf.MessageOfTricker.prototype.getPropList = function () {
  return /** @type {!Array<!proto.protobuf.PropType>} */ (
    jspb.Message.getRepeatedField(this, 7)
  );
};

/**
 * @param {!Array<!proto.protobuf.PropType>} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setPropList = function (value) {
  return jspb.Message.setField(this, 7, value || []);
};

/**
 * @param {!proto.protobuf.PropType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.addProp = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.clearPropList = function () {
  return this.setPropList([]);
};

/**
 * optional TrickerType tricker_type = 8;
 * @return {!proto.protobuf.TrickerType}
 */
proto.protobuf.MessageOfTricker.prototype.getTrickerType = function () {
  return /** @type {!proto.protobuf.TrickerType} */ (
    jspb.Message.getFieldWithDefault(this, 8, 0)
  );
};

/**
 * @param {!proto.protobuf.TrickerType} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setTrickerType = function (value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};

/**
 * optional int64 guid = 9;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getGuid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setGuid = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional int32 score = 10;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getScore = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setScore = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int64 player_id = 11;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getPlayerId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setPlayerId = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional int32 view_range = 12;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getViewRange = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setViewRange = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 radius = 13;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getRadius = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setRadius = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional PlayerState player_state = 14;
 * @return {!proto.protobuf.PlayerState}
 */
proto.protobuf.MessageOfTricker.prototype.getPlayerState = function () {
  return /** @type {!proto.protobuf.PlayerState} */ (
    jspb.Message.getFieldWithDefault(this, 14, 0)
  );
};

/**
 * @param {!proto.protobuf.PlayerState} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setPlayerState = function (value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};

/**
 * optional double trick_desire = 15;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getTrickDesire = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setTrickDesire = function (value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};

/**
 * optional double class_volume = 16;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getClassVolume = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setClassVolume = function (value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};

/**
 * optional double facing_direction = 17;
 * @return {number}
 */
proto.protobuf.MessageOfTricker.prototype.getFacingDirection = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setFacingDirection = function (
  value,
) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};

/**
 * optional BulletType bullet_type = 18;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfTricker.prototype.getBulletType = function () {
  return /** @type {!proto.protobuf.BulletType} */ (
    jspb.Message.getFieldWithDefault(this, 18, 0)
  );
};

/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setBulletType = function (value) {
  return jspb.Message.setProto3EnumField(this, 18, value);
};

/**
 * repeated TrickerBuffType buff = 19;
 * @return {!Array<!proto.protobuf.TrickerBuffType>}
 */
proto.protobuf.MessageOfTricker.prototype.getBuffList = function () {
  return /** @type {!Array<!proto.protobuf.TrickerBuffType>} */ (
    jspb.Message.getRepeatedField(this, 19)
  );
};

/**
 * @param {!Array<!proto.protobuf.TrickerBuffType>} value
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.setBuffList = function (value) {
  return jspb.Message.setField(this, 19, value || []);
};

/**
 * @param {!proto.protobuf.TrickerBuffType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.addBuff = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfTricker} returns this
 */
proto.protobuf.MessageOfTricker.prototype.clearBuffList = function () {
  return this.setBuffList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfBullet.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfBullet.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfBullet} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfBullet.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, 0),
        x: jspb.Message.getFieldWithDefault(msg, 2, 0),
        y: jspb.Message.getFieldWithDefault(msg, 3, 0),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          4,
          0.0,
        ),
        guid: jspb.Message.getFieldWithDefault(msg, 5, 0),
        team: jspb.Message.getFieldWithDefault(msg, 6, 0),
        bombRange: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
        speed: jspb.Message.getFieldWithDefault(msg, 9, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfBullet.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfBullet();
  return proto.protobuf.MessageOfBullet.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfBullet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfBullet.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.protobuf.BulletType} */ (
          reader.readEnum()
        );
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setGuid(value);
        break;
      case 6:
        var value = /** @type {!proto.protobuf.PlayerType} */ (
          reader.readEnum()
        );
        msg.setTeam(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setBombRange(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSpeed(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfBullet.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfBullet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfBullet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBullet.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(4, f);
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
  f = message.getTeam();
  if (f !== 0.0) {
    writer.writeEnum(6, f);
  }
  f = message.getBombRange();
  if (f !== 0.0) {
    writer.writeDouble(8, f);
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(9, f);
  }
};

/**
 * optional BulletType type = 1;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfBullet.prototype.getType = function () {
  return /** @type {!proto.protobuf.BulletType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getFacingDirection = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setFacingDirection = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};

/**
 * optional int64 guid = 5;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getGuid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setGuid = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional PlayerType team = 6;
 * @return {!proto.protobuf.PlayerType}
 */
proto.protobuf.MessageOfBullet.prototype.getTeam = function () {
  return /** @type {!proto.protobuf.PlayerType} */ (
    jspb.Message.getFieldWithDefault(this, 6, 0)
  );
};

/**
 * @param {!proto.protobuf.PlayerType} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setTeam = function (value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};

/**
 * optional double bomb_range = 8;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getBombRange = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setBombRange = function (value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};

/**
 * optional int32 speed = 9;
 * @return {number}
 */
proto.protobuf.MessageOfBullet.prototype.getSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBullet} returns this
 */
proto.protobuf.MessageOfBullet.prototype.setSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfBombedBullet.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfBombedBullet.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfBombedBullet} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfBombedBullet.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, 0),
        x: jspb.Message.getFieldWithDefault(msg, 2, 0),
        y: jspb.Message.getFieldWithDefault(msg, 3, 0),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          4,
          0.0,
        ),
        mappingId: jspb.Message.getFieldWithDefault(msg, 5, 0),
        bombRange: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfBombedBullet.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfBombedBullet();
  return proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfBombedBullet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.protobuf.BulletType} */ (
          reader.readEnum()
        );
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setMappingId(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setBombRange(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfBombedBullet.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfBombedBullet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(4, f);
  }
  f = message.getMappingId();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
  f = message.getBombRange();
  if (f !== 0.0) {
    writer.writeDouble(6, f);
  }
};

/**
 * optional BulletType type = 1;
 * @return {!proto.protobuf.BulletType}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getType = function () {
  return /** @type {!proto.protobuf.BulletType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.protobuf.BulletType} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getFacingDirection =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setFacingDirection = function (
  value,
) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};

/**
 * optional int64 mapping_id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getMappingId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setMappingId = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional double bomb_range = 6;
 * @return {number}
 */
proto.protobuf.MessageOfBombedBullet.prototype.getBombRange = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBombedBullet} returns this
 */
proto.protobuf.MessageOfBombedBullet.prototype.setBombRange = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfProp.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfProp.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfProp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfProp.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, 0),
        x: jspb.Message.getFieldWithDefault(msg, 2, 0),
        y: jspb.Message.getFieldWithDefault(msg, 3, 0),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          4,
          0.0,
        ),
        guid: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfProp}
 */
proto.protobuf.MessageOfProp.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfProp();
  return proto.protobuf.MessageOfProp.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfProp}
 */
proto.protobuf.MessageOfProp.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.protobuf.PropType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setGuid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfProp.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfProp.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(4, f);
  }
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
};

/**
 * optional PropType type = 1;
 * @return {!proto.protobuf.PropType}
 */
proto.protobuf.MessageOfProp.prototype.getType = function () {
  return /** @type {!proto.protobuf.PropType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.protobuf.PropType} value
 * @return {!proto.protobuf.MessageOfProp} returns this
 */
proto.protobuf.MessageOfProp.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfProp.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfProp} returns this
 */
proto.protobuf.MessageOfProp.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfProp.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfProp} returns this
 */
proto.protobuf.MessageOfProp.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfProp.prototype.getFacingDirection = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfProp} returns this
 */
proto.protobuf.MessageOfProp.prototype.setFacingDirection = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};

/**
 * optional int64 guid = 5;
 * @return {number}
 */
proto.protobuf.MessageOfProp.prototype.getGuid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfProp} returns this
 */
proto.protobuf.MessageOfProp.prototype.setGuid = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfPickedProp.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfPickedProp.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfPickedProp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfPickedProp.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        type: jspb.Message.getFieldWithDefault(msg, 1, 0),
        x: jspb.Message.getFieldWithDefault(msg, 2, 0),
        y: jspb.Message.getFieldWithDefault(msg, 3, 0),
        facingDirection: jspb.Message.getFloatingPointFieldWithDefault(
          msg,
          4,
          0.0,
        ),
        mappingId: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfPickedProp}
 */
proto.protobuf.MessageOfPickedProp.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfPickedProp();
  return proto.protobuf.MessageOfPickedProp.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfPickedProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfPickedProp}
 */
proto.protobuf.MessageOfPickedProp.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.protobuf.PropType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setFacingDirection(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setMappingId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfPickedProp.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfPickedProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfPickedProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfPickedProp.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(4, f);
  }
  f = message.getMappingId();
  if (f !== 0) {
    writer.writeInt64(5, f);
  }
};

/**
 * optional PropType type = 1;
 * @return {!proto.protobuf.PropType}
 */
proto.protobuf.MessageOfPickedProp.prototype.getType = function () {
  return /** @type {!proto.protobuf.PropType} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.protobuf.PropType} value
 * @return {!proto.protobuf.MessageOfPickedProp} returns this
 */
proto.protobuf.MessageOfPickedProp.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfPickedProp.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfPickedProp} returns this
 */
proto.protobuf.MessageOfPickedProp.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfPickedProp.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfPickedProp} returns this
 */
proto.protobuf.MessageOfPickedProp.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional double facing_direction = 4;
 * @return {number}
 */
proto.protobuf.MessageOfPickedProp.prototype.getFacingDirection = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfPickedProp} returns this
 */
proto.protobuf.MessageOfPickedProp.prototype.setFacingDirection = function (
  value,
) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};

/**
 * optional int64 mapping_id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfPickedProp.prototype.getMappingId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfPickedProp} returns this
 */
proto.protobuf.MessageOfPickedProp.prototype.setMappingId = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfClassroom.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfClassroom.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfClassroom} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfClassroom.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        progress: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfClassroom}
 */
proto.protobuf.MessageOfClassroom.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfClassroom();
  return proto.protobuf.MessageOfClassroom.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfClassroom} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfClassroom}
 */
proto.protobuf.MessageOfClassroom.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProgress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfClassroom.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfClassroom.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfClassroom} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfClassroom.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfClassroom.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfClassroom} returns this
 */
proto.protobuf.MessageOfClassroom.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfClassroom.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfClassroom} returns this
 */
proto.protobuf.MessageOfClassroom.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 progress = 3;
 * @return {number}
 */
proto.protobuf.MessageOfClassroom.prototype.getProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfClassroom} returns this
 */
proto.protobuf.MessageOfClassroom.prototype.setProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfGate.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfGate.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfGate} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfGate.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        progress: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfGate}
 */
proto.protobuf.MessageOfGate.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfGate();
  return proto.protobuf.MessageOfGate.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfGate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfGate}
 */
proto.protobuf.MessageOfGate.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProgress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfGate.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfGate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfGate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfGate.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfGate.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfGate} returns this
 */
proto.protobuf.MessageOfGate.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfGate.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfGate} returns this
 */
proto.protobuf.MessageOfGate.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 progress = 3;
 * @return {number}
 */
proto.protobuf.MessageOfGate.prototype.getProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfGate} returns this
 */
proto.protobuf.MessageOfGate.prototype.setProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfHiddenGate.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfHiddenGate.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfHiddenGate} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfHiddenGate.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        opened: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfHiddenGate}
 */
proto.protobuf.MessageOfHiddenGate.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfHiddenGate();
  return proto.protobuf.MessageOfHiddenGate.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfHiddenGate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfHiddenGate}
 */
proto.protobuf.MessageOfHiddenGate.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setOpened(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfHiddenGate.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfHiddenGate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfHiddenGate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfHiddenGate.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getOpened();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfHiddenGate.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHiddenGate} returns this
 */
proto.protobuf.MessageOfHiddenGate.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfHiddenGate.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfHiddenGate} returns this
 */
proto.protobuf.MessageOfHiddenGate.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional bool opened = 3;
 * @return {boolean}
 */
proto.protobuf.MessageOfHiddenGate.prototype.getOpened = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfHiddenGate} returns this
 */
proto.protobuf.MessageOfHiddenGate.prototype.setOpened = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfDoor.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfDoor.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfDoor} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfDoor.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        isOpen: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        progress: jspb.Message.getFieldWithDefault(msg, 4, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfDoor}
 */
proto.protobuf.MessageOfDoor.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfDoor();
  return proto.protobuf.MessageOfDoor.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfDoor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfDoor}
 */
proto.protobuf.MessageOfDoor.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsOpen(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProgress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfDoor.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfDoor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfDoor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfDoor.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getIsOpen();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(4, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfDoor.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfDoor} returns this
 */
proto.protobuf.MessageOfDoor.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfDoor.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfDoor} returns this
 */
proto.protobuf.MessageOfDoor.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional bool is_open = 3;
 * @return {boolean}
 */
proto.protobuf.MessageOfDoor.prototype.getIsOpen = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfDoor} returns this
 */
proto.protobuf.MessageOfDoor.prototype.setIsOpen = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional int32 progress = 4;
 * @return {number}
 */
proto.protobuf.MessageOfDoor.prototype.getProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfDoor} returns this
 */
proto.protobuf.MessageOfDoor.prototype.setProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfChest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfChest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfChest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfChest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        x: jspb.Message.getFieldWithDefault(msg, 1, 0),
        y: jspb.Message.getFieldWithDefault(msg, 2, 0),
        progress: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfChest}
 */
proto.protobuf.MessageOfChest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfChest();
  return proto.protobuf.MessageOfChest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfChest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfChest}
 */
proto.protobuf.MessageOfChest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setX(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setY(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setProgress(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfChest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfChest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfChest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfChest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
};

/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfChest.prototype.getX = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfChest} returns this
 */
proto.protobuf.MessageOfChest.prototype.setX = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfChest.prototype.getY = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfChest} returns this
 */
proto.protobuf.MessageOfChest.prototype.setY = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 progress = 3;
 * @return {number}
 */
proto.protobuf.MessageOfChest.prototype.getProgress = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfChest} returns this
 */
proto.protobuf.MessageOfChest.prototype.setProgress = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfMap.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfMap.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfMap} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfMap.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        rowList: jspb.Message.toObjectList(
          msg.getRowList(),
          proto.protobuf.MessageOfMap.Row.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap();
  return proto.protobuf.MessageOfMap.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new proto.protobuf.MessageOfMap.Row();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader,
        );
        msg.addRow(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getRowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter,
    );
  }
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.Row.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfMap.Row.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfMap.Row.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfMap.Row} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfMap.Row.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        colList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap.Row();
  return proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var values = /** @type {!Array<!proto.protobuf.PlaceType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addCol(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.Row.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getColList();
  if (f.length > 0) {
    writer.writePackedEnum(1, f);
  }
};

/**
 * repeated PlaceType col = 1;
 * @return {!Array<!proto.protobuf.PlaceType>}
 */
proto.protobuf.MessageOfMap.Row.prototype.getColList = function () {
  return /** @type {!Array<!proto.protobuf.PlaceType>} */ (
    jspb.Message.getRepeatedField(this, 1)
  );
};

/**
 * @param {!Array<!proto.protobuf.PlaceType>} value
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.setColList = function (value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {!proto.protobuf.PlaceType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.addCol = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.clearColList = function () {
  return this.setColList([]);
};

/**
 * repeated Row row = 2;
 * @return {!Array<!proto.protobuf.MessageOfMap.Row>}
 */
proto.protobuf.MessageOfMap.prototype.getRowList = function () {
  return /** @type{!Array<!proto.protobuf.MessageOfMap.Row>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.protobuf.MessageOfMap.Row,
      2,
    )
  );
};

/**
 * @param {!Array<!proto.protobuf.MessageOfMap.Row>} value
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.setRowList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.protobuf.MessageOfMap.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.prototype.addRow = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.protobuf.MessageOfMap.Row,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.clearRowList = function () {
  return this.setRowList([]);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfNews.oneofGroups_ = [[1, 4]];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfNews.NewsCase = {
  NEWS_NOT_SET: 0,
  TEXT_MESSAGE: 1,
  BINARY_MESSAGE: 4,
};

/**
 * @return {proto.protobuf.MessageOfNews.NewsCase}
 */
proto.protobuf.MessageOfNews.prototype.getNewsCase = function () {
  return /** @type {proto.protobuf.MessageOfNews.NewsCase} */ (
    jspb.Message.computeOneofCase(
      this,
      proto.protobuf.MessageOfNews.oneofGroups_[0],
    )
  );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfNews.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfNews.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfNews} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfNews.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        textMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
        binaryMessage: msg.getBinaryMessage_asB64(),
        fromId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        toId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfNews();
  return proto.protobuf.MessageOfNews.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfNews} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTextMessage(value);
        break;
      case 4:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setBinaryMessage(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setFromId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setToId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfNews.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfNews} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfNews.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(1, f);
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(4, f);
  }
  f = message.getFromId();
  if (f !== 0) {
    writer.writeInt64(2, f);
  }
  f = message.getToId();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
};

/**
 * optional string text_message = 1;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getTextMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setTextMessage = function (value) {
  return jspb.Message.setOneofField(
    this,
    1,
    proto.protobuf.MessageOfNews.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearTextMessage = function () {
  return jspb.Message.setOneofField(
    this,
    1,
    proto.protobuf.MessageOfNews.oneofGroups_[0],
    undefined,
  );
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasTextMessage = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional bytes binary_message = 4;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * optional bytes binary_message = 4;
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asB64 = function () {
  return /** @type {string} */ (
    jspb.Message.bytesAsB64(this.getBinaryMessage())
  );
};

/**
 * optional bytes binary_message = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asU8 = function () {
  return /** @type {!Uint8Array} */ (
    jspb.Message.bytesAsU8(this.getBinaryMessage())
  );
};

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setBinaryMessage = function (value) {
  return jspb.Message.setOneofField(
    this,
    4,
    proto.protobuf.MessageOfNews.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearBinaryMessage = function () {
  return jspb.Message.setOneofField(
    this,
    4,
    proto.protobuf.MessageOfNews.oneofGroups_[0],
    undefined,
  );
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasBinaryMessage = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional int64 from_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getFromId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setFromId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int64 to_id = 3;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getToId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setToId = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfObj.oneofGroups_ = [
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfObj.MessageOfObjCase = {
  MESSAGE_OF_OBJ_NOT_SET: 0,
  STUDENT_MESSAGE: 1,
  TRICKER_MESSAGE: 2,
  PROP_MESSAGE: 3,
  BULLET_MESSAGE: 4,
  BOMBED_BULLET_MESSAGE: 5,
  CLASSROOM_MESSAGE: 6,
  DOOR_MESSAGE: 7,
  GATE_MESSAGE: 8,
  CHEST_MESSAGE: 9,
  HIDDEN_GATE_MESSAGE: 10,
  NEWS_MESSAGE: 11,
  MAP_MESSAGE: 12,
};

/**
 * @return {proto.protobuf.MessageOfObj.MessageOfObjCase}
 */
proto.protobuf.MessageOfObj.prototype.getMessageOfObjCase = function () {
  return /** @type {proto.protobuf.MessageOfObj.MessageOfObjCase} */ (
    jspb.Message.computeOneofCase(
      this,
      proto.protobuf.MessageOfObj.oneofGroups_[0],
    )
  );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfObj.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfObj.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfObj} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfObj.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        studentMessage:
          (f = msg.getStudentMessage()) &&
          proto.protobuf.MessageOfStudent.toObject(includeInstance, f),
        trickerMessage:
          (f = msg.getTrickerMessage()) &&
          proto.protobuf.MessageOfTricker.toObject(includeInstance, f),
        propMessage:
          (f = msg.getPropMessage()) &&
          proto.protobuf.MessageOfProp.toObject(includeInstance, f),
        bulletMessage:
          (f = msg.getBulletMessage()) &&
          proto.protobuf.MessageOfBullet.toObject(includeInstance, f),
        bombedBulletMessage:
          (f = msg.getBombedBulletMessage()) &&
          proto.protobuf.MessageOfBombedBullet.toObject(includeInstance, f),
        classroomMessage:
          (f = msg.getClassroomMessage()) &&
          proto.protobuf.MessageOfClassroom.toObject(includeInstance, f),
        doorMessage:
          (f = msg.getDoorMessage()) &&
          proto.protobuf.MessageOfDoor.toObject(includeInstance, f),
        gateMessage:
          (f = msg.getGateMessage()) &&
          proto.protobuf.MessageOfGate.toObject(includeInstance, f),
        chestMessage:
          (f = msg.getChestMessage()) &&
          proto.protobuf.MessageOfChest.toObject(includeInstance, f),
        hiddenGateMessage:
          (f = msg.getHiddenGateMessage()) &&
          proto.protobuf.MessageOfHiddenGate.toObject(includeInstance, f),
        newsMessage:
          (f = msg.getNewsMessage()) &&
          proto.protobuf.MessageOfNews.toObject(includeInstance, f),
        mapMessage:
          (f = msg.getMapMessage()) &&
          proto.protobuf.MessageOfMap.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfObj();
  return proto.protobuf.MessageOfObj.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.protobuf.MessageOfStudent();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfStudent.deserializeBinaryFromReader,
        );
        msg.setStudentMessage(value);
        break;
      case 2:
        var value = new proto.protobuf.MessageOfTricker();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfTricker.deserializeBinaryFromReader,
        );
        msg.setTrickerMessage(value);
        break;
      case 3:
        var value = new proto.protobuf.MessageOfProp();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfProp.deserializeBinaryFromReader,
        );
        msg.setPropMessage(value);
        break;
      case 4:
        var value = new proto.protobuf.MessageOfBullet();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfBullet.deserializeBinaryFromReader,
        );
        msg.setBulletMessage(value);
        break;
      case 5:
        var value = new proto.protobuf.MessageOfBombedBullet();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfBombedBullet.deserializeBinaryFromReader,
        );
        msg.setBombedBulletMessage(value);
        break;
      case 6:
        var value = new proto.protobuf.MessageOfClassroom();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfClassroom.deserializeBinaryFromReader,
        );
        msg.setClassroomMessage(value);
        break;
      case 7:
        var value = new proto.protobuf.MessageOfDoor();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfDoor.deserializeBinaryFromReader,
        );
        msg.setDoorMessage(value);
        break;
      case 8:
        var value = new proto.protobuf.MessageOfGate();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfGate.deserializeBinaryFromReader,
        );
        msg.setGateMessage(value);
        break;
      case 9:
        var value = new proto.protobuf.MessageOfChest();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfChest.deserializeBinaryFromReader,
        );
        msg.setChestMessage(value);
        break;
      case 10:
        var value = new proto.protobuf.MessageOfHiddenGate();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfHiddenGate.deserializeBinaryFromReader,
        );
        msg.setHiddenGateMessage(value);
        break;
      case 11:
        var value = new proto.protobuf.MessageOfNews();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfNews.deserializeBinaryFromReader,
        );
        msg.setNewsMessage(value);
        break;
      case 12:
        var value = new proto.protobuf.MessageOfMap();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfMap.deserializeBinaryFromReader,
        );
        msg.setMapMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfObj.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfObj.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getStudentMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf.MessageOfStudent.serializeBinaryToWriter,
    );
  }
  f = message.getTrickerMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf.MessageOfTricker.serializeBinaryToWriter,
    );
  }
  f = message.getPropMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfProp.serializeBinaryToWriter,
    );
  }
  f = message.getBulletMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf.MessageOfBullet.serializeBinaryToWriter,
    );
  }
  f = message.getBombedBulletMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protobuf.MessageOfBombedBullet.serializeBinaryToWriter,
    );
  }
  f = message.getClassroomMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.protobuf.MessageOfClassroom.serializeBinaryToWriter,
    );
  }
  f = message.getDoorMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.protobuf.MessageOfDoor.serializeBinaryToWriter,
    );
  }
  f = message.getGateMessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.protobuf.MessageOfGate.serializeBinaryToWriter,
    );
  }
  f = message.getChestMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.protobuf.MessageOfChest.serializeBinaryToWriter,
    );
  }
  f = message.getHiddenGateMessage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.protobuf.MessageOfHiddenGate.serializeBinaryToWriter,
    );
  }
  f = message.getNewsMessage();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.protobuf.MessageOfNews.serializeBinaryToWriter,
    );
  }
  f = message.getMapMessage();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.protobuf.MessageOfMap.serializeBinaryToWriter,
    );
  }
};

/**
 * optional MessageOfStudent student_message = 1;
 * @return {?proto.protobuf.MessageOfStudent}
 */
proto.protobuf.MessageOfObj.prototype.getStudentMessage = function () {
  return /** @type{?proto.protobuf.MessageOfStudent} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfStudent, 1)
  );
};

/**
 * @param {?proto.protobuf.MessageOfStudent|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setStudentMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    1,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearStudentMessage = function () {
  return this.setStudentMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasStudentMessage = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional MessageOfTricker tricker_message = 2;
 * @return {?proto.protobuf.MessageOfTricker}
 */
proto.protobuf.MessageOfObj.prototype.getTrickerMessage = function () {
  return /** @type{?proto.protobuf.MessageOfTricker} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfTricker, 2)
  );
};

/**
 * @param {?proto.protobuf.MessageOfTricker|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setTrickerMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    2,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearTrickerMessage = function () {
  return this.setTrickerMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasTrickerMessage = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional MessageOfProp prop_message = 3;
 * @return {?proto.protobuf.MessageOfProp}
 */
proto.protobuf.MessageOfObj.prototype.getPropMessage = function () {
  return /** @type{?proto.protobuf.MessageOfProp} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfProp, 3)
  );
};

/**
 * @param {?proto.protobuf.MessageOfProp|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setPropMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    3,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearPropMessage = function () {
  return this.setPropMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasPropMessage = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional MessageOfBullet bullet_message = 4;
 * @return {?proto.protobuf.MessageOfBullet}
 */
proto.protobuf.MessageOfObj.prototype.getBulletMessage = function () {
  return /** @type{?proto.protobuf.MessageOfBullet} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfBullet, 4)
  );
};

/**
 * @param {?proto.protobuf.MessageOfBullet|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setBulletMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    4,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearBulletMessage = function () {
  return this.setBulletMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasBulletMessage = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional MessageOfBombedBullet bombed_bullet_message = 5;
 * @return {?proto.protobuf.MessageOfBombedBullet}
 */
proto.protobuf.MessageOfObj.prototype.getBombedBulletMessage = function () {
  return /** @type{?proto.protobuf.MessageOfBombedBullet} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfBombedBullet, 5)
  );
};

/**
 * @param {?proto.protobuf.MessageOfBombedBullet|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setBombedBulletMessage = function (
  value,
) {
  return jspb.Message.setOneofWrapperField(
    this,
    5,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearBombedBulletMessage = function () {
  return this.setBombedBulletMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasBombedBulletMessage = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional MessageOfClassroom classroom_message = 6;
 * @return {?proto.protobuf.MessageOfClassroom}
 */
proto.protobuf.MessageOfObj.prototype.getClassroomMessage = function () {
  return /** @type{?proto.protobuf.MessageOfClassroom} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfClassroom, 6)
  );
};

/**
 * @param {?proto.protobuf.MessageOfClassroom|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setClassroomMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    6,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearClassroomMessage = function () {
  return this.setClassroomMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasClassroomMessage = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional MessageOfDoor door_message = 7;
 * @return {?proto.protobuf.MessageOfDoor}
 */
proto.protobuf.MessageOfObj.prototype.getDoorMessage = function () {
  return /** @type{?proto.protobuf.MessageOfDoor} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfDoor, 7)
  );
};

/**
 * @param {?proto.protobuf.MessageOfDoor|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setDoorMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    7,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearDoorMessage = function () {
  return this.setDoorMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasDoorMessage = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional MessageOfGate gate_message = 8;
 * @return {?proto.protobuf.MessageOfGate}
 */
proto.protobuf.MessageOfObj.prototype.getGateMessage = function () {
  return /** @type{?proto.protobuf.MessageOfGate} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfGate, 8)
  );
};

/**
 * @param {?proto.protobuf.MessageOfGate|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setGateMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    8,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearGateMessage = function () {
  return this.setGateMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasGateMessage = function () {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional MessageOfChest chest_message = 9;
 * @return {?proto.protobuf.MessageOfChest}
 */
proto.protobuf.MessageOfObj.prototype.getChestMessage = function () {
  return /** @type{?proto.protobuf.MessageOfChest} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfChest, 9)
  );
};

/**
 * @param {?proto.protobuf.MessageOfChest|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setChestMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    9,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearChestMessage = function () {
  return this.setChestMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasChestMessage = function () {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * optional MessageOfHiddenGate hidden_gate_message = 10;
 * @return {?proto.protobuf.MessageOfHiddenGate}
 */
proto.protobuf.MessageOfObj.prototype.getHiddenGateMessage = function () {
  return /** @type{?proto.protobuf.MessageOfHiddenGate} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfHiddenGate, 10)
  );
};

/**
 * @param {?proto.protobuf.MessageOfHiddenGate|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setHiddenGateMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    10,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearHiddenGateMessage = function () {
  return this.setHiddenGateMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasHiddenGateMessage = function () {
  return jspb.Message.getField(this, 10) != null;
};

/**
 * optional MessageOfNews news_message = 11;
 * @return {?proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfObj.prototype.getNewsMessage = function () {
  return /** @type{?proto.protobuf.MessageOfNews} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfNews, 11)
  );
};

/**
 * @param {?proto.protobuf.MessageOfNews|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setNewsMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    11,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearNewsMessage = function () {
  return this.setNewsMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasNewsMessage = function () {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional MessageOfMap map_message = 12;
 * @return {?proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfObj.prototype.getMapMessage = function () {
  return /** @type{?proto.protobuf.MessageOfMap} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfMap, 12)
  );
};

/**
 * @param {?proto.protobuf.MessageOfMap|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.setMapMessage = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    12,
    proto.protobuf.MessageOfObj.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearMapMessage = function () {
  return this.setMapMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasMapMessage = function () {
  return jspb.Message.getField(this, 12) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageOfAll.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageOfAll.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageOfAll} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageOfAll.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        gameTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
        subjectFinished: jspb.Message.getFieldWithDefault(msg, 2, 0),
        studentGraduated: jspb.Message.getFieldWithDefault(msg, 3, 0),
        studentQuited: jspb.Message.getFieldWithDefault(msg, 4, 0),
        studentScore: jspb.Message.getFieldWithDefault(msg, 5, 0),
        trickerScore: jspb.Message.getFieldWithDefault(msg, 6, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfAll();
  return proto.protobuf.MessageOfAll.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfAll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setGameTime(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSubjectFinished(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setStudentGraduated(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setStudentQuited(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setStudentScore(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setTrickerScore(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfAll.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfAll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfAll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAll.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getGameTime();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getSubjectFinished();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getStudentGraduated();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getStudentQuited();
  if (f !== 0) {
    writer.writeInt32(4, f);
  }
  f = message.getStudentScore();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getTrickerScore();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
};

/**
 * optional int32 game_time = 1;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getGameTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setGameTime = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 subject_finished = 2;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getSubjectFinished = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setSubjectFinished = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 student_graduated = 3;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getStudentGraduated = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setStudentGraduated = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional int32 student_quited = 4;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getStudentQuited = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setStudentQuited = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional int32 student_score = 5;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getStudentScore = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setStudentScore = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional int32 tricker_score = 6;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getTrickerScore = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setTrickerScore = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageToClient.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MessageToClient.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.protobuf.MessageToClient.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MessageToClient} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MessageToClient.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        objMessageList: jspb.Message.toObjectList(
          msg.getObjMessageList(),
          proto.protobuf.MessageOfObj.toObject,
          includeInstance,
        ),
        gameState: jspb.Message.getFieldWithDefault(msg, 2, 0),
        allMessage:
          (f = msg.getAllMessage()) &&
          proto.protobuf.MessageOfAll.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageToClient();
  return proto.protobuf.MessageToClient.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageToClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.protobuf.MessageOfObj();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfObj.deserializeBinaryFromReader,
        );
        msg.addObjMessage(value);
        break;
      case 2:
        var value = /** @type {!proto.protobuf.GameState} */ (
          reader.readEnum()
        );
        msg.setGameState(value);
        break;
      case 3:
        var value = new proto.protobuf.MessageOfAll();
        reader.readMessage(
          value,
          proto.protobuf.MessageOfAll.deserializeBinaryFromReader,
        );
        msg.setAllMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageToClient.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageToClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageToClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageToClient.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getObjMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.MessageOfObj.serializeBinaryToWriter,
    );
  }
  f = message.getGameState();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getAllMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfAll.serializeBinaryToWriter,
    );
  }
};

/**
 * repeated MessageOfObj obj_message = 1;
 * @return {!Array<!proto.protobuf.MessageOfObj>}
 */
proto.protobuf.MessageToClient.prototype.getObjMessageList = function () {
  return /** @type{!Array<!proto.protobuf.MessageOfObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfObj, 1)
  );
};

/**
 * @param {!Array<!proto.protobuf.MessageOfObj>} value
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.setObjMessageList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.protobuf.MessageOfObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageToClient.prototype.addObjMessage = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.protobuf.MessageOfObj,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearObjMessageList = function () {
  return this.setObjMessageList([]);
};

/**
 * optional GameState game_state = 2;
 * @return {!proto.protobuf.GameState}
 */
proto.protobuf.MessageToClient.prototype.getGameState = function () {
  return /** @type {!proto.protobuf.GameState} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  );
};

/**
 * @param {!proto.protobuf.GameState} value
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.setGameState = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional MessageOfAll all_message = 3;
 * @return {?proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageToClient.prototype.getAllMessage = function () {
  return /** @type{?proto.protobuf.MessageOfAll} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfAll, 3)
  );
};

/**
 * @param {?proto.protobuf.MessageOfAll|undefined} value
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.setAllMessage = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearAllMessage = function () {
  return this.setAllMessage(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageToClient.prototype.hasAllMessage = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.MoveRes.prototype.toObject = function (opt_includeInstance) {
    return proto.protobuf.MoveRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.MoveRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.MoveRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        actualSpeed: jspb.Message.getFieldWithDefault(msg, 1, 0),
        actualAngle: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
        actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MoveRes();
  return proto.protobuf.MoveRes.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MoveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setActualSpeed(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readDouble());
        msg.setActualAngle(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setActSuccess(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MoveRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MoveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MoveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MoveRes.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getActualSpeed();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getActualAngle();
  if (f !== 0.0) {
    writer.writeDouble(2, f);
  }
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional int64 actual_speed = 1;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualSpeed = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualSpeed = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional double actual_angle = 2;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualAngle = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualAngle = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};

/**
 * optional bool act_success = 3;
 * @return {boolean}
 */
proto.protobuf.MoveRes.prototype.getActSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.protobuf.BoolRes.prototype.toObject = function (opt_includeInstance) {
    return proto.protobuf.BoolRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.protobuf.BoolRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.protobuf.BoolRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.BoolRes();
  return proto.protobuf.BoolRes.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.BoolRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setActSuccess(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.BoolRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.BoolRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.BoolRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.BoolRes.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
};

/**
 * optional bool act_success = 1;
 * @return {boolean}
 */
proto.protobuf.BoolRes.prototype.getActSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.protobuf.BoolRes} returns this
 */
proto.protobuf.BoolRes.prototype.setActSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

goog.object.extend(exports, proto.protobuf);
