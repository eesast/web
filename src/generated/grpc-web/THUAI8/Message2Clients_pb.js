// source: Message2Clients.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var MessageType_pb = require('./MessageType_pb.js');
goog.object.extend(proto, MessageType_pb);
goog.exportSymbol('proto.protobuf.BoolRes', null, global);
goog.exportSymbol('proto.protobuf.CharacterInfoRes', null, global);
goog.exportSymbol('proto.protobuf.CreatCharacterRes', null, global);
goog.exportSymbol('proto.protobuf.EcoRes', null, global);
goog.exportSymbol('proto.protobuf.MessageOfAdditionResource', null, global);
goog.exportSymbol('proto.protobuf.MessageOfAll', null, global);
goog.exportSymbol('proto.protobuf.MessageOfBarracks', null, global);
goog.exportSymbol('proto.protobuf.MessageOfCharacter', null, global);
goog.exportSymbol('proto.protobuf.MessageOfConstruction', null, global);
goog.exportSymbol('proto.protobuf.MessageOfEconomyResource', null, global);
goog.exportSymbol('proto.protobuf.MessageOfFarm', null, global);
goog.exportSymbol('proto.protobuf.MessageOfMap', null, global);
goog.exportSymbol('proto.protobuf.MessageOfMap.Row', null, global);
goog.exportSymbol('proto.protobuf.MessageOfMonkeySkill', null, global);
goog.exportSymbol('proto.protobuf.MessageOfNews', null, global);
goog.exportSymbol('proto.protobuf.MessageOfNews.NewsCase', null, global);
goog.exportSymbol('proto.protobuf.MessageOfObj', null, global);
goog.exportSymbol('proto.protobuf.MessageOfObj.MessageOfObjCase', null, global);
goog.exportSymbol('proto.protobuf.MessageOfSpring', null, global);
goog.exportSymbol('proto.protobuf.MessageOfTeam', null, global);
goog.exportSymbol('proto.protobuf.MessageOfTrap', null, global);
goog.exportSymbol('proto.protobuf.MessageToClient', null, global);
goog.exportSymbol('proto.protobuf.MoveRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMonkeySkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfMonkeySkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMonkeySkill.displayName = 'proto.protobuf.MessageOfMonkeySkill';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfCharacter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfCharacter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfCharacter.displayName = 'proto.protobuf.MessageOfCharacter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfBarracks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfBarracks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfBarracks.displayName = 'proto.protobuf.MessageOfBarracks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfSpring = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfSpring, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfSpring.displayName = 'proto.protobuf.MessageOfSpring';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfFarm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfFarm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfFarm.displayName = 'proto.protobuf.MessageOfFarm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfTrap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfTrap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfTrap.displayName = 'proto.protobuf.MessageOfTrap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfEconomyResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfEconomyResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfEconomyResource.displayName = 'proto.protobuf.MessageOfEconomyResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfAdditionResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfAdditionResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfAdditionResource.displayName = 'proto.protobuf.MessageOfAdditionResource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfConstruction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfConstruction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfConstruction.displayName = 'proto.protobuf.MessageOfConstruction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageOfMap.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageOfMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.displayName = 'proto.protobuf.MessageOfMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfMap.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageOfMap.Row.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageOfMap.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfMap.Row.displayName = 'proto.protobuf.MessageOfMap.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfTeam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfTeam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfTeam.displayName = 'proto.protobuf.MessageOfTeam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf.MessageOfObj.oneofGroups_);
};
goog.inherits(proto.protobuf.MessageOfObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfObj.displayName = 'proto.protobuf.MessageOfObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfAll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MessageOfAll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfAll.displayName = 'proto.protobuf.MessageOfAll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageToClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.MessageToClient.repeatedFields_, null);
};
goog.inherits(proto.protobuf.MessageToClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageToClient.displayName = 'proto.protobuf.MessageToClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MoveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.MoveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MoveRes.displayName = 'proto.protobuf.MoveRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.CreatCharacterRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.CreatCharacterRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.CreatCharacterRes.displayName = 'proto.protobuf.CreatCharacterRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.BoolRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.BoolRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.BoolRes.displayName = 'proto.protobuf.BoolRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.CharacterInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.CharacterInfoRes.repeatedFields_, null);
};
goog.inherits(proto.protobuf.CharacterInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.CharacterInfoRes.displayName = 'proto.protobuf.CharacterInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.EcoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.EcoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.EcoRes.displayName = 'proto.protobuf.EcoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.MessageOfNews = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protobuf.MessageOfNews.oneofGroups_);
};
goog.inherits(proto.protobuf.MessageOfNews, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.MessageOfNews.displayName = 'proto.protobuf.MessageOfNews';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfMonkeySkill.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfMonkeySkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfMonkeySkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMonkeySkill.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    angle: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMonkeySkill}
 */
proto.protobuf.MessageOfMonkeySkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMonkeySkill;
  return proto.protobuf.MessageOfMonkeySkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMonkeySkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMonkeySkill}
 */
proto.protobuf.MessageOfMonkeySkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAngle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMonkeySkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMonkeySkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMonkeySkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMonkeySkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAngle();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional int64 team_id = 1;
 * @return {number}
 */
proto.protobuf.MessageOfMonkeySkill.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMonkeySkill} returns this
 */
proto.protobuf.MessageOfMonkeySkill.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfMonkeySkill.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMonkeySkill} returns this
 */
proto.protobuf.MessageOfMonkeySkill.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double angle = 3;
 * @return {number}
 */
proto.protobuf.MessageOfMonkeySkill.prototype.getAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMonkeySkill} returns this
 */
proto.protobuf.MessageOfMonkeySkill.prototype.setAngle = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfCharacter.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfCharacter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfCharacter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfCharacter.toObject = function(includeInstance, msg) {
  var f, obj = {
    guid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    characterType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    characterActiveState: jspb.Message.getFieldWithDefault(msg, 5, 0),
    isBlind: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    blindTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isStunned: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    stunnedTime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    isInvisible: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    invisibleTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isBurned: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    burnedTime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    harmCut: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    harmCutTime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    characterPassiveState: jspb.Message.getFieldWithDefault(msg, 16, 0),
    x: jspb.Message.getFieldWithDefault(msg, 17, 0),
    y: jspb.Message.getFieldWithDefault(msg, 18, 0),
    facingDirection: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    speed: jspb.Message.getFieldWithDefault(msg, 20, 0),
    viewRange: jspb.Message.getFieldWithDefault(msg, 21, 0),
    commonAttack: jspb.Message.getFieldWithDefault(msg, 22, 0),
    commonAttackCd: jspb.Message.getFieldWithDefault(msg, 23, 0),
    commonAttackRange: jspb.Message.getFieldWithDefault(msg, 24, 0),
    skillAttackCd: jspb.Message.getFieldWithDefault(msg, 25, 0),
    economyDepletion: jspb.Message.getFieldWithDefault(msg, 26, 0),
    killScore: jspb.Message.getFieldWithDefault(msg, 27, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 28, 0),
    shieldEquipment: jspb.Message.getFieldWithDefault(msg, 29, 0),
    shoesEquipment: jspb.Message.getFieldWithDefault(msg, 30, 0),
    shoesTime: jspb.Message.getFieldWithDefault(msg, 31, 0),
    isPurified: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    purifiedTime: jspb.Message.getFieldWithDefault(msg, 33, 0),
    isBerserk: jspb.Message.getBooleanFieldWithDefault(msg, 34, false),
    berserkTime: jspb.Message.getFieldWithDefault(msg, 35, 0),
    attackBuffNum: jspb.Message.getFieldWithDefault(msg, 36, 0),
    attackBuffTime: jspb.Message.getFieldWithDefault(msg, 37, 0),
    speedBuffTime: jspb.Message.getFieldWithDefault(msg, 38, 0),
    visionBuffTime: jspb.Message.getFieldWithDefault(msg, 39, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfCharacter}
 */
proto.protobuf.MessageOfCharacter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfCharacter;
  return proto.protobuf.MessageOfCharacter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfCharacter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfCharacter}
 */
proto.protobuf.MessageOfCharacter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    case 4:
      var value = /** @type {!proto.protobuf.CharacterType} */ (reader.readEnum());
      msg.setCharacterType(value);
      break;
    case 5:
      var value = /** @type {!proto.protobuf.CharacterState} */ (reader.readEnum());
      msg.setCharacterActiveState(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBlind(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlindTime(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStunned(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStunnedTime(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInvisible(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInvisibleTime(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBurned(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBurnedTime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHarmCut(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHarmCutTime(value);
      break;
    case 16:
      var value = /** @type {!proto.protobuf.CharacterState} */ (reader.readEnum());
      msg.setCharacterPassiveState(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFacingDirection(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpeed(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViewRange(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommonAttack(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommonAttackCd(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommonAttackRange(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkillAttackCd(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEconomyDepletion(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKillScore(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShieldEquipment(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShoesEquipment(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShoesTime(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPurified(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPurifiedTime(value);
      break;
    case 34:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBerserk(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBerserkTime(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttackBuffNum(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAttackBuffTime(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSpeedBuffTime(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVisionBuffTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfCharacter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfCharacter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfCharacter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfCharacter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGuid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCharacterType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCharacterActiveState();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getIsBlind();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getBlindTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIsStunned();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getStunnedTime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getIsInvisible();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getInvisibleTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getIsBurned();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getBurnedTime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getHarmCut();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getHarmCutTime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getCharacterPassiveState();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getFacingDirection();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getSpeed();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getViewRange();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getCommonAttack();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getCommonAttackCd();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = message.getCommonAttackRange();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getSkillAttackCd();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getEconomyDepletion();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getKillScore();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getShieldEquipment();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getShoesEquipment();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getShoesTime();
  if (f !== 0) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = message.getIsPurified();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
  f = message.getPurifiedTime();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getIsBerserk();
  if (f) {
    writer.writeBool(
      34,
      f
    );
  }
  f = message.getBerserkTime();
  if (f !== 0) {
    writer.writeInt64(
      35,
      f
    );
  }
  f = message.getAttackBuffNum();
  if (f !== 0) {
    writer.writeInt32(
      36,
      f
    );
  }
  f = message.getAttackBuffTime();
  if (f !== 0) {
    writer.writeInt64(
      37,
      f
    );
  }
  f = message.getSpeedBuffTime();
  if (f !== 0) {
    writer.writeInt64(
      38,
      f
    );
  }
  f = message.getVisionBuffTime();
  if (f !== 0) {
    writer.writeInt64(
      39,
      f
    );
  }
};


/**
 * optional int64 guid = 1;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getGuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setGuid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 team_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 player_id = 3;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional CharacterType character_type = 4;
 * @return {!proto.protobuf.CharacterType}
 */
proto.protobuf.MessageOfCharacter.prototype.getCharacterType = function() {
  return /** @type {!proto.protobuf.CharacterType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.protobuf.CharacterType} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCharacterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional CharacterState character_active_state = 5;
 * @return {!proto.protobuf.CharacterState}
 */
proto.protobuf.MessageOfCharacter.prototype.getCharacterActiveState = function() {
  return /** @type {!proto.protobuf.CharacterState} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.protobuf.CharacterState} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCharacterActiveState = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bool is_blind = 6;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsBlind = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsBlind = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 blind_time = 7;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getBlindTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setBlindTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool is_stunned = 8;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsStunned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsStunned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int64 stunned_time = 9;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getStunnedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setStunnedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool is_invisible = 10;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsInvisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsInvisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int64 invisible_time = 11;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getInvisibleTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setInvisibleTime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool is_burned = 12;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsBurned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsBurned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int64 burned_time = 13;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getBurnedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setBurnedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional double harm_cut = 14;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getHarmCut = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setHarmCut = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional int64 harm_cut_time = 15;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getHarmCutTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setHarmCutTime = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional CharacterState character_passive_state = 16;
 * @return {!proto.protobuf.CharacterState}
 */
proto.protobuf.MessageOfCharacter.prototype.getCharacterPassiveState = function() {
  return /** @type {!proto.protobuf.CharacterState} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.protobuf.CharacterState} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCharacterPassiveState = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional int32 x = 17;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 y = 18;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional double facing_direction = 19;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getFacingDirection = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setFacingDirection = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional int32 speed = 20;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 view_range = 21;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getViewRange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setViewRange = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 common_attack = 22;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getCommonAttack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCommonAttack = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int64 common_attack_cd = 23;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getCommonAttackCd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCommonAttackCd = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 common_attack_range = 24;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getCommonAttackRange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setCommonAttackRange = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int64 skill_attack_cd = 25;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getSkillAttackCd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setSkillAttackCd = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 economy_depletion = 26;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getEconomyDepletion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setEconomyDepletion = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int32 kill_score = 27;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getKillScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setKillScore = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional int32 hp = 28;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int32 shield_equipment = 29;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getShieldEquipment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setShieldEquipment = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional int32 shoes_equipment = 30;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getShoesEquipment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setShoesEquipment = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int64 shoes_time = 31;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getShoesTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setShoesTime = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional bool is_purified = 32;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsPurified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsPurified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};


/**
 * optional int64 purified_time = 33;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getPurifiedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setPurifiedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional bool is_berserk = 34;
 * @return {boolean}
 */
proto.protobuf.MessageOfCharacter.prototype.getIsBerserk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 34, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setIsBerserk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 34, value);
};


/**
 * optional int64 berserk_time = 35;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getBerserkTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setBerserkTime = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional int32 attack_buff_num = 36;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getAttackBuffNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setAttackBuffNum = function(value) {
  return jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional int64 attack_buff_time = 37;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getAttackBuffTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setAttackBuffTime = function(value) {
  return jspb.Message.setProto3IntField(this, 37, value);
};


/**
 * optional int64 speed_buff_time = 38;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getSpeedBuffTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setSpeedBuffTime = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional int64 vision_buff_time = 39;
 * @return {number}
 */
proto.protobuf.MessageOfCharacter.prototype.getVisionBuffTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfCharacter} returns this
 */
proto.protobuf.MessageOfCharacter.prototype.setVisionBuffTime = function(value) {
  return jspb.Message.setProto3IntField(this, 39, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfBarracks.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfBarracks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfBarracks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBarracks.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfBarracks}
 */
proto.protobuf.MessageOfBarracks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfBarracks;
  return proto.protobuf.MessageOfBarracks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfBarracks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfBarracks}
 */
proto.protobuf.MessageOfBarracks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfBarracks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfBarracks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfBarracks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfBarracks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfBarracks.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBarracks} returns this
 */
proto.protobuf.MessageOfBarracks.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfBarracks.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBarracks} returns this
 */
proto.protobuf.MessageOfBarracks.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfBarracks.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBarracks} returns this
 */
proto.protobuf.MessageOfBarracks.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfBarracks.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBarracks} returns this
 */
proto.protobuf.MessageOfBarracks.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfBarracks.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfBarracks} returns this
 */
proto.protobuf.MessageOfBarracks.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfSpring.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfSpring.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfSpring} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfSpring.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfSpring}
 */
proto.protobuf.MessageOfSpring.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfSpring;
  return proto.protobuf.MessageOfSpring.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfSpring} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfSpring}
 */
proto.protobuf.MessageOfSpring.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfSpring.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfSpring.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfSpring} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfSpring.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfSpring.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfSpring} returns this
 */
proto.protobuf.MessageOfSpring.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfSpring.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfSpring} returns this
 */
proto.protobuf.MessageOfSpring.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfSpring.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfSpring} returns this
 */
proto.protobuf.MessageOfSpring.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfSpring.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfSpring} returns this
 */
proto.protobuf.MessageOfSpring.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfSpring.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfSpring} returns this
 */
proto.protobuf.MessageOfSpring.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfFarm.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfFarm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfFarm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFarm.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfFarm}
 */
proto.protobuf.MessageOfFarm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfFarm;
  return proto.protobuf.MessageOfFarm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfFarm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfFarm}
 */
proto.protobuf.MessageOfFarm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfFarm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfFarm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfFarm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfFarm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.protobuf.MessageOfFarm.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFarm} returns this
 */
proto.protobuf.MessageOfFarm.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.protobuf.MessageOfFarm.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFarm} returns this
 */
proto.protobuf.MessageOfFarm.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 hp = 3;
 * @return {number}
 */
proto.protobuf.MessageOfFarm.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFarm} returns this
 */
proto.protobuf.MessageOfFarm.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfFarm.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFarm} returns this
 */
proto.protobuf.MessageOfFarm.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfFarm.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfFarm} returns this
 */
proto.protobuf.MessageOfFarm.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfTrap.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfTrap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfTrap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTrap.toObject = function(includeInstance, msg) {
  var f, obj = {
    trapType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFieldWithDefault(msg, 2, 0),
    y: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    id: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfTrap}
 */
proto.protobuf.MessageOfTrap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfTrap;
  return proto.protobuf.MessageOfTrap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfTrap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfTrap}
 */
proto.protobuf.MessageOfTrap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.TrapType} */ (reader.readEnum());
      msg.setTrapType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfTrap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfTrap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfTrap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTrap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrapType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional TrapType trap_type = 1;
 * @return {!proto.protobuf.TrapType}
 */
proto.protobuf.MessageOfTrap.prototype.getTrapType = function() {
  return /** @type {!proto.protobuf.TrapType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.TrapType} value
 * @return {!proto.protobuf.MessageOfTrap} returns this
 */
proto.protobuf.MessageOfTrap.prototype.setTrapType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfTrap.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTrap} returns this
 */
proto.protobuf.MessageOfTrap.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfTrap.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTrap} returns this
 */
proto.protobuf.MessageOfTrap.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 team_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfTrap.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTrap} returns this
 */
proto.protobuf.MessageOfTrap.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfTrap.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTrap} returns this
 */
proto.protobuf.MessageOfTrap.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfEconomyResource.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfEconomyResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfEconomyResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfEconomyResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    economyResourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    economyResourceState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    x: jspb.Message.getFieldWithDefault(msg, 3, 0),
    y: jspb.Message.getFieldWithDefault(msg, 4, 0),
    process: jspb.Message.getFieldWithDefault(msg, 5, 0),
    id: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfEconomyResource}
 */
proto.protobuf.MessageOfEconomyResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfEconomyResource;
  return proto.protobuf.MessageOfEconomyResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfEconomyResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfEconomyResource}
 */
proto.protobuf.MessageOfEconomyResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.EconomyResourceType} */ (reader.readEnum());
      msg.setEconomyResourceType(value);
      break;
    case 2:
      var value = /** @type {!proto.protobuf.EconomyResourceState} */ (reader.readEnum());
      msg.setEconomyResourceState(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProcess(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfEconomyResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfEconomyResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfEconomyResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfEconomyResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEconomyResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getEconomyResourceState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProcess();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional EconomyResourceType economy_resource_type = 1;
 * @return {!proto.protobuf.EconomyResourceType}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getEconomyResourceType = function() {
  return /** @type {!proto.protobuf.EconomyResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.EconomyResourceType} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setEconomyResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional EconomyResourceState economy_resource_state = 2;
 * @return {!proto.protobuf.EconomyResourceState}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getEconomyResourceState = function() {
  return /** @type {!proto.protobuf.EconomyResourceState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.protobuf.EconomyResourceState} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setEconomyResourceState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 x = 3;
 * @return {number}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 y = 4;
 * @return {number}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 process = 5;
 * @return {number}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getProcess = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setProcess = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 id = 6;
 * @return {number}
 */
proto.protobuf.MessageOfEconomyResource.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfEconomyResource} returns this
 */
proto.protobuf.MessageOfEconomyResource.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfAdditionResource.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfAdditionResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfAdditionResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAdditionResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    additionResourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    additionResourceState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    x: jspb.Message.getFieldWithDefault(msg, 3, 0),
    y: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    id: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfAdditionResource}
 */
proto.protobuf.MessageOfAdditionResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfAdditionResource;
  return proto.protobuf.MessageOfAdditionResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfAdditionResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfAdditionResource}
 */
proto.protobuf.MessageOfAdditionResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.AdditionResourceType} */ (reader.readEnum());
      msg.setAdditionResourceType(value);
      break;
    case 2:
      var value = /** @type {!proto.protobuf.AdditionResourceState} */ (reader.readEnum());
      msg.setAdditionResourceState(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfAdditionResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfAdditionResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfAdditionResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAdditionResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdditionResourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAdditionResourceState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional AdditionResourceType addition_resource_type = 1;
 * @return {!proto.protobuf.AdditionResourceType}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getAdditionResourceType = function() {
  return /** @type {!proto.protobuf.AdditionResourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.AdditionResourceType} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setAdditionResourceType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional AdditionResourceState addition_resource_state = 2;
 * @return {!proto.protobuf.AdditionResourceState}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getAdditionResourceState = function() {
  return /** @type {!proto.protobuf.AdditionResourceState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.protobuf.AdditionResourceState} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setAdditionResourceState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 x = 3;
 * @return {number}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 y = 4;
 * @return {number}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 hp = 5;
 * @return {number}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 id = 6;
 * @return {number}
 */
proto.protobuf.MessageOfAdditionResource.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAdditionResource} returns this
 */
proto.protobuf.MessageOfAdditionResource.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfConstruction.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfConstruction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfConstruction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfConstruction.toObject = function(includeInstance, msg) {
  var f, obj = {
    constructionType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFieldWithDefault(msg, 2, 0),
    y: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfConstruction}
 */
proto.protobuf.MessageOfConstruction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfConstruction;
  return proto.protobuf.MessageOfConstruction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfConstruction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfConstruction}
 */
proto.protobuf.MessageOfConstruction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.protobuf.ConstructionType} */ (reader.readEnum());
      msg.setConstructionType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfConstruction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfConstruction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfConstruction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfConstruction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConstructionType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional ConstructionType construction_type = 1;
 * @return {!proto.protobuf.ConstructionType}
 */
proto.protobuf.MessageOfConstruction.prototype.getConstructionType = function() {
  return /** @type {!proto.protobuf.ConstructionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.protobuf.ConstructionType} value
 * @return {!proto.protobuf.MessageOfConstruction} returns this
 */
proto.protobuf.MessageOfConstruction.prototype.setConstructionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.MessageOfConstruction.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfConstruction} returns this
 */
proto.protobuf.MessageOfConstruction.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.MessageOfConstruction.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfConstruction} returns this
 */
proto.protobuf.MessageOfConstruction.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 hp = 4;
 * @return {number}
 */
proto.protobuf.MessageOfConstruction.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfConstruction} returns this
 */
proto.protobuf.MessageOfConstruction.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 team_id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfConstruction.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfConstruction} returns this
 */
proto.protobuf.MessageOfConstruction.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfMap.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    width: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.protobuf.MessageOfMap.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap;
  return proto.protobuf.MessageOfMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfMap.Row;
      reader.readMessage(value,proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageOfMap.Row.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfMap.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfMap.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfMap.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    colsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfMap.Row;
  return proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfMap.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.protobuf.PlaceType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCols(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfMap.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfMap.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfMap.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated PlaceType cols = 1;
 * @return {!Array<!proto.protobuf.PlaceType>}
 */
proto.protobuf.MessageOfMap.Row.prototype.getColsList = function() {
  return /** @type {!Array<!proto.protobuf.PlaceType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.protobuf.PlaceType>} value
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.setColsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.protobuf.PlaceType} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.addCols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap.Row} returns this
 */
proto.protobuf.MessageOfMap.Row.prototype.clearColsList = function() {
  return this.setColsList([]);
};


/**
 * optional uint32 height = 1;
 * @return {number}
 */
proto.protobuf.MessageOfMap.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 width = 2;
 * @return {number}
 */
proto.protobuf.MessageOfMap.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Row rows = 3;
 * @return {!Array<!proto.protobuf.MessageOfMap.Row>}
 */
proto.protobuf.MessageOfMap.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfMap.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfMap.Row, 3));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfMap.Row>} value
 * @return {!proto.protobuf.MessageOfMap} returns this
*/
proto.protobuf.MessageOfMap.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf.MessageOfMap.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfMap.Row}
 */
proto.protobuf.MessageOfMap.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf.MessageOfMap.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageOfMap} returns this
 */
proto.protobuf.MessageOfMap.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfTeam.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfTeam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfTeam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTeam.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    energy: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfTeam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfTeam;
  return proto.protobuf.MessageOfTeam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfTeam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfTeam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnergy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfTeam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfTeam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfTeam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfTeam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnergy();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 team_id = 1;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player_id = 2;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 score = 3;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 energy = 4;
 * @return {number}
 */
proto.protobuf.MessageOfTeam.prototype.getEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfTeam} returns this
 */
proto.protobuf.MessageOfTeam.prototype.setEnergy = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfObj.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfObj.MessageOfObjCase = {
  MESSAGE_OF_OBJ_NOT_SET: 0,
  CHARACTER_MESSAGE: 1,
  BARRACKS_MESSAGE: 2,
  SPRING_MESSAGE: 3,
  FARM_MESSAGE: 4,
  TRAP_MESSAGE: 5,
  ECONOMY_RESOURCE_MESSAGE: 6,
  ADDITION_RESOURCE_MESSAGE: 7,
  MAP_MESSAGE: 8,
  NEWS_MESSAGE: 9,
  TEAM_MESSAGE: 10
};

/**
 * @return {proto.protobuf.MessageOfObj.MessageOfObjCase}
 */
proto.protobuf.MessageOfObj.prototype.getMessageOfObjCase = function() {
  return /** @type {proto.protobuf.MessageOfObj.MessageOfObjCase} */(jspb.Message.computeOneofCase(this, proto.protobuf.MessageOfObj.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfObj.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    characterMessage: (f = msg.getCharacterMessage()) && proto.protobuf.MessageOfCharacter.toObject(includeInstance, f),
    barracksMessage: (f = msg.getBarracksMessage()) && proto.protobuf.MessageOfBarracks.toObject(includeInstance, f),
    springMessage: (f = msg.getSpringMessage()) && proto.protobuf.MessageOfSpring.toObject(includeInstance, f),
    farmMessage: (f = msg.getFarmMessage()) && proto.protobuf.MessageOfFarm.toObject(includeInstance, f),
    trapMessage: (f = msg.getTrapMessage()) && proto.protobuf.MessageOfTrap.toObject(includeInstance, f),
    economyResourceMessage: (f = msg.getEconomyResourceMessage()) && proto.protobuf.MessageOfEconomyResource.toObject(includeInstance, f),
    additionResourceMessage: (f = msg.getAdditionResourceMessage()) && proto.protobuf.MessageOfAdditionResource.toObject(includeInstance, f),
    mapMessage: (f = msg.getMapMessage()) && proto.protobuf.MessageOfMap.toObject(includeInstance, f),
    newsMessage: (f = msg.getNewsMessage()) && proto.protobuf.MessageOfNews.toObject(includeInstance, f),
    teamMessage: (f = msg.getTeamMessage()) && proto.protobuf.MessageOfTeam.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfObj;
  return proto.protobuf.MessageOfObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageOfObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfCharacter;
      reader.readMessage(value,proto.protobuf.MessageOfCharacter.deserializeBinaryFromReader);
      msg.setCharacterMessage(value);
      break;
    case 2:
      var value = new proto.protobuf.MessageOfBarracks;
      reader.readMessage(value,proto.protobuf.MessageOfBarracks.deserializeBinaryFromReader);
      msg.setBarracksMessage(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfSpring;
      reader.readMessage(value,proto.protobuf.MessageOfSpring.deserializeBinaryFromReader);
      msg.setSpringMessage(value);
      break;
    case 4:
      var value = new proto.protobuf.MessageOfFarm;
      reader.readMessage(value,proto.protobuf.MessageOfFarm.deserializeBinaryFromReader);
      msg.setFarmMessage(value);
      break;
    case 5:
      var value = new proto.protobuf.MessageOfTrap;
      reader.readMessage(value,proto.protobuf.MessageOfTrap.deserializeBinaryFromReader);
      msg.setTrapMessage(value);
      break;
    case 6:
      var value = new proto.protobuf.MessageOfEconomyResource;
      reader.readMessage(value,proto.protobuf.MessageOfEconomyResource.deserializeBinaryFromReader);
      msg.setEconomyResourceMessage(value);
      break;
    case 7:
      var value = new proto.protobuf.MessageOfAdditionResource;
      reader.readMessage(value,proto.protobuf.MessageOfAdditionResource.deserializeBinaryFromReader);
      msg.setAdditionResourceMessage(value);
      break;
    case 8:
      var value = new proto.protobuf.MessageOfMap;
      reader.readMessage(value,proto.protobuf.MessageOfMap.deserializeBinaryFromReader);
      msg.setMapMessage(value);
      break;
    case 9:
      var value = new proto.protobuf.MessageOfNews;
      reader.readMessage(value,proto.protobuf.MessageOfNews.deserializeBinaryFromReader);
      msg.setNewsMessage(value);
      break;
    case 10:
      var value = new proto.protobuf.MessageOfTeam;
      reader.readMessage(value,proto.protobuf.MessageOfTeam.deserializeBinaryFromReader);
      msg.setTeamMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharacterMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protobuf.MessageOfCharacter.serializeBinaryToWriter
    );
  }
  f = message.getBarracksMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protobuf.MessageOfBarracks.serializeBinaryToWriter
    );
  }
  f = message.getSpringMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfSpring.serializeBinaryToWriter
    );
  }
  f = message.getFarmMessage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protobuf.MessageOfFarm.serializeBinaryToWriter
    );
  }
  f = message.getTrapMessage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protobuf.MessageOfTrap.serializeBinaryToWriter
    );
  }
  f = message.getEconomyResourceMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.protobuf.MessageOfEconomyResource.serializeBinaryToWriter
    );
  }
  f = message.getAdditionResourceMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.protobuf.MessageOfAdditionResource.serializeBinaryToWriter
    );
  }
  f = message.getMapMessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.protobuf.MessageOfMap.serializeBinaryToWriter
    );
  }
  f = message.getNewsMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.protobuf.MessageOfNews.serializeBinaryToWriter
    );
  }
  f = message.getTeamMessage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.protobuf.MessageOfTeam.serializeBinaryToWriter
    );
  }
};


/**
 * optional MessageOfCharacter character_message = 1;
 * @return {?proto.protobuf.MessageOfCharacter}
 */
proto.protobuf.MessageOfObj.prototype.getCharacterMessage = function() {
  return /** @type{?proto.protobuf.MessageOfCharacter} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfCharacter, 1));
};


/**
 * @param {?proto.protobuf.MessageOfCharacter|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setCharacterMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearCharacterMessage = function() {
  return this.setCharacterMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasCharacterMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MessageOfBarracks barracks_message = 2;
 * @return {?proto.protobuf.MessageOfBarracks}
 */
proto.protobuf.MessageOfObj.prototype.getBarracksMessage = function() {
  return /** @type{?proto.protobuf.MessageOfBarracks} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfBarracks, 2));
};


/**
 * @param {?proto.protobuf.MessageOfBarracks|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setBarracksMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearBarracksMessage = function() {
  return this.setBarracksMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasBarracksMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MessageOfSpring spring_message = 3;
 * @return {?proto.protobuf.MessageOfSpring}
 */
proto.protobuf.MessageOfObj.prototype.getSpringMessage = function() {
  return /** @type{?proto.protobuf.MessageOfSpring} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfSpring, 3));
};


/**
 * @param {?proto.protobuf.MessageOfSpring|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setSpringMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearSpringMessage = function() {
  return this.setSpringMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasSpringMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MessageOfFarm farm_message = 4;
 * @return {?proto.protobuf.MessageOfFarm}
 */
proto.protobuf.MessageOfObj.prototype.getFarmMessage = function() {
  return /** @type{?proto.protobuf.MessageOfFarm} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfFarm, 4));
};


/**
 * @param {?proto.protobuf.MessageOfFarm|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setFarmMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearFarmMessage = function() {
  return this.setFarmMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasFarmMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MessageOfTrap trap_message = 5;
 * @return {?proto.protobuf.MessageOfTrap}
 */
proto.protobuf.MessageOfObj.prototype.getTrapMessage = function() {
  return /** @type{?proto.protobuf.MessageOfTrap} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfTrap, 5));
};


/**
 * @param {?proto.protobuf.MessageOfTrap|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setTrapMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearTrapMessage = function() {
  return this.setTrapMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasTrapMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MessageOfEconomyResource economy_resource_message = 6;
 * @return {?proto.protobuf.MessageOfEconomyResource}
 */
proto.protobuf.MessageOfObj.prototype.getEconomyResourceMessage = function() {
  return /** @type{?proto.protobuf.MessageOfEconomyResource} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfEconomyResource, 6));
};


/**
 * @param {?proto.protobuf.MessageOfEconomyResource|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setEconomyResourceMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearEconomyResourceMessage = function() {
  return this.setEconomyResourceMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasEconomyResourceMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MessageOfAdditionResource addition_resource_message = 7;
 * @return {?proto.protobuf.MessageOfAdditionResource}
 */
proto.protobuf.MessageOfObj.prototype.getAdditionResourceMessage = function() {
  return /** @type{?proto.protobuf.MessageOfAdditionResource} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfAdditionResource, 7));
};


/**
 * @param {?proto.protobuf.MessageOfAdditionResource|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setAdditionResourceMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearAdditionResourceMessage = function() {
  return this.setAdditionResourceMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasAdditionResourceMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional MessageOfMap map_message = 8;
 * @return {?proto.protobuf.MessageOfMap}
 */
proto.protobuf.MessageOfObj.prototype.getMapMessage = function() {
  return /** @type{?proto.protobuf.MessageOfMap} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfMap, 8));
};


/**
 * @param {?proto.protobuf.MessageOfMap|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setMapMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearMapMessage = function() {
  return this.setMapMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasMapMessage = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MessageOfNews news_message = 9;
 * @return {?proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfObj.prototype.getNewsMessage = function() {
  return /** @type{?proto.protobuf.MessageOfNews} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfNews, 9));
};


/**
 * @param {?proto.protobuf.MessageOfNews|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setNewsMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearNewsMessage = function() {
  return this.setNewsMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasNewsMessage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional MessageOfTeam team_message = 10;
 * @return {?proto.protobuf.MessageOfTeam}
 */
proto.protobuf.MessageOfObj.prototype.getTeamMessage = function() {
  return /** @type{?proto.protobuf.MessageOfTeam} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfTeam, 10));
};


/**
 * @param {?proto.protobuf.MessageOfTeam|undefined} value
 * @return {!proto.protobuf.MessageOfObj} returns this
*/
proto.protobuf.MessageOfObj.prototype.setTeamMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.protobuf.MessageOfObj.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageOfObj} returns this
 */
proto.protobuf.MessageOfObj.prototype.clearTeamMessage = function() {
  return this.setTeamMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfObj.prototype.hasTeamMessage = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfAll.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfAll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfAll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAll.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buddhistsTeamScore: jspb.Message.getFieldWithDefault(msg, 2, 0),
    monstersTeamScore: jspb.Message.getFieldWithDefault(msg, 3, 0),
    buddhistsTeamEconomy: jspb.Message.getFieldWithDefault(msg, 4, 0),
    monstersTeamEconomy: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buddhistsHeroHp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    monstersHeroHp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfAll;
  return proto.protobuf.MessageOfAll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfAll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageOfAll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuddhistsTeamScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonstersTeamScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuddhistsTeamEconomy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonstersTeamEconomy(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuddhistsHeroHp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonstersHeroHp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfAll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfAll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfAll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfAll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameTime();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBuddhistsTeamScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMonstersTeamScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBuddhistsTeamEconomy();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMonstersTeamEconomy();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBuddhistsHeroHp();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getMonstersHeroHp();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 game_time = 1;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getGameTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setGameTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 buddhists_team_score = 2;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getBuddhistsTeamScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setBuddhistsTeamScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 monsters_team_score = 3;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getMonstersTeamScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setMonstersTeamScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 buddhists_team_economy = 4;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getBuddhistsTeamEconomy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setBuddhistsTeamEconomy = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 monsters_team_economy = 5;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getMonstersTeamEconomy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setMonstersTeamEconomy = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 buddhists_hero_hp = 6;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getBuddhistsHeroHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setBuddhistsHeroHp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 monsters_hero_hp = 7;
 * @return {number}
 */
proto.protobuf.MessageOfAll.prototype.getMonstersHeroHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfAll} returns this
 */
proto.protobuf.MessageOfAll.prototype.setMonstersHeroHp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.MessageToClient.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageToClient.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageToClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageToClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageToClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    objMessageList: jspb.Message.toObjectList(msg.getObjMessageList(),
    proto.protobuf.MessageOfObj.toObject, includeInstance),
    gameState: jspb.Message.getFieldWithDefault(msg, 2, 0),
    allMessage: (f = msg.getAllMessage()) && proto.protobuf.MessageOfAll.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageToClient;
  return proto.protobuf.MessageToClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageToClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageToClient}
 */
proto.protobuf.MessageToClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfObj;
      reader.readMessage(value,proto.protobuf.MessageOfObj.deserializeBinaryFromReader);
      msg.addObjMessage(value);
      break;
    case 2:
      var value = /** @type {!proto.protobuf.GameState} */ (reader.readEnum());
      msg.setGameState(value);
      break;
    case 3:
      var value = new proto.protobuf.MessageOfAll;
      reader.readMessage(value,proto.protobuf.MessageOfAll.deserializeBinaryFromReader);
      msg.setAllMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageToClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageToClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageToClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageToClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.MessageOfObj.serializeBinaryToWriter
    );
  }
  f = message.getGameState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAllMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protobuf.MessageOfAll.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MessageOfObj obj_message = 1;
 * @return {!Array<!proto.protobuf.MessageOfObj>}
 */
proto.protobuf.MessageToClient.prototype.getObjMessageList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfObj, 1));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfObj>} value
 * @return {!proto.protobuf.MessageToClient} returns this
*/
proto.protobuf.MessageToClient.prototype.setObjMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.MessageOfObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfObj}
 */
proto.protobuf.MessageToClient.prototype.addObjMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.MessageOfObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearObjMessageList = function() {
  return this.setObjMessageList([]);
};


/**
 * optional GameState game_state = 2;
 * @return {!proto.protobuf.GameState}
 */
proto.protobuf.MessageToClient.prototype.getGameState = function() {
  return /** @type {!proto.protobuf.GameState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.protobuf.GameState} value
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.setGameState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional MessageOfAll all_message = 3;
 * @return {?proto.protobuf.MessageOfAll}
 */
proto.protobuf.MessageToClient.prototype.getAllMessage = function() {
  return /** @type{?proto.protobuf.MessageOfAll} */ (
    jspb.Message.getWrapperField(this, proto.protobuf.MessageOfAll, 3));
};


/**
 * @param {?proto.protobuf.MessageOfAll|undefined} value
 * @return {!proto.protobuf.MessageToClient} returns this
*/
proto.protobuf.MessageToClient.prototype.setAllMessage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protobuf.MessageToClient} returns this
 */
proto.protobuf.MessageToClient.prototype.clearAllMessage = function() {
  return this.setAllMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageToClient.prototype.hasAllMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MoveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MoveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MoveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MoveRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualSpeed: jspb.Message.getFieldWithDefault(msg, 1, 0),
    actualAngle: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MoveRes;
  return proto.protobuf.MoveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MoveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MoveRes}
 */
proto.protobuf.MoveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActualSpeed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setActualAngle(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MoveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MoveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MoveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MoveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualSpeed();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getActualAngle();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 actual_speed = 1;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualSpeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualSpeed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double actual_angle = 2;
 * @return {number}
 */
proto.protobuf.MoveRes.prototype.getActualAngle = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActualAngle = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool act_success = 3;
 * @return {boolean}
 */
proto.protobuf.MoveRes.prototype.getActSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.MoveRes} returns this
 */
proto.protobuf.MoveRes.prototype.setActSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.CreatCharacterRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.CreatCharacterRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.CreatCharacterRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.CreatCharacterRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    playerId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.CreatCharacterRes}
 */
proto.protobuf.CreatCharacterRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.CreatCharacterRes;
  return proto.protobuf.CreatCharacterRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.CreatCharacterRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.CreatCharacterRes}
 */
proto.protobuf.CreatCharacterRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.CreatCharacterRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.CreatCharacterRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.CreatCharacterRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.CreatCharacterRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPlayerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional bool act_success = 1;
 * @return {boolean}
 */
proto.protobuf.CreatCharacterRes.prototype.getActSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.CreatCharacterRes} returns this
 */
proto.protobuf.CreatCharacterRes.prototype.setActSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 player_id = 2;
 * @return {number}
 */
proto.protobuf.CreatCharacterRes.prototype.getPlayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.CreatCharacterRes} returns this
 */
proto.protobuf.CreatCharacterRes.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.BoolRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.BoolRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.BoolRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.BoolRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    actSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.BoolRes;
  return proto.protobuf.BoolRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.BoolRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.BoolRes}
 */
proto.protobuf.BoolRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.BoolRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.BoolRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.BoolRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.BoolRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool act_success = 1;
 * @return {boolean}
 */
proto.protobuf.BoolRes.prototype.getActSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.BoolRes} returns this
 */
proto.protobuf.BoolRes.prototype.setActSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.CharacterInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.CharacterInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.CharacterInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.CharacterInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.CharacterInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    characterInfoList: jspb.Message.toObjectList(msg.getCharacterInfoList(),
    proto.protobuf.MessageOfCharacter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.CharacterInfoRes}
 */
proto.protobuf.CharacterInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.CharacterInfoRes;
  return proto.protobuf.CharacterInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.CharacterInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.CharacterInfoRes}
 */
proto.protobuf.CharacterInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.MessageOfCharacter;
      reader.readMessage(value,proto.protobuf.MessageOfCharacter.deserializeBinaryFromReader);
      msg.addCharacterInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.CharacterInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.CharacterInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.CharacterInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.CharacterInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharacterInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.MessageOfCharacter.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MessageOfCharacter Character_info = 1;
 * @return {!Array<!proto.protobuf.MessageOfCharacter>}
 */
proto.protobuf.CharacterInfoRes.prototype.getCharacterInfoList = function() {
  return /** @type{!Array<!proto.protobuf.MessageOfCharacter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.MessageOfCharacter, 1));
};


/**
 * @param {!Array<!proto.protobuf.MessageOfCharacter>} value
 * @return {!proto.protobuf.CharacterInfoRes} returns this
*/
proto.protobuf.CharacterInfoRes.prototype.setCharacterInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.MessageOfCharacter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.MessageOfCharacter}
 */
proto.protobuf.CharacterInfoRes.prototype.addCharacterInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.MessageOfCharacter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.CharacterInfoRes} returns this
 */
proto.protobuf.CharacterInfoRes.prototype.clearCharacterInfoList = function() {
  return this.setCharacterInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.EcoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.EcoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.EcoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.EcoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    economy: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.EcoRes}
 */
proto.protobuf.EcoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.EcoRes;
  return proto.protobuf.EcoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.EcoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.EcoRes}
 */
proto.protobuf.EcoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEconomy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.EcoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.EcoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.EcoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.EcoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEconomy();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 economy = 1;
 * @return {number}
 */
proto.protobuf.EcoRes.prototype.getEconomy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.EcoRes} returns this
 */
proto.protobuf.EcoRes.prototype.setEconomy = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protobuf.MessageOfNews.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.protobuf.MessageOfNews.NewsCase = {
  NEWS_NOT_SET: 0,
  TEXT_MESSAGE: 1,
  BINARY_MESSAGE: 2
};

/**
 * @return {proto.protobuf.MessageOfNews.NewsCase}
 */
proto.protobuf.MessageOfNews.prototype.getNewsCase = function() {
  return /** @type {proto.protobuf.MessageOfNews.NewsCase} */(jspb.Message.computeOneofCase(this, proto.protobuf.MessageOfNews.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.MessageOfNews.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.MessageOfNews.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.MessageOfNews} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfNews.toObject = function(includeInstance, msg) {
  var f, obj = {
    textMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    binaryMessage: msg.getBinaryMessage_asB64(),
    fromId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    toId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    teamId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.MessageOfNews;
  return proto.protobuf.MessageOfNews.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.MessageOfNews} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.MessageOfNews}
 */
proto.protobuf.MessageOfNews.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextMessage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinaryMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTeamId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.MessageOfNews.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.MessageOfNews} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.MessageOfNews.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getFromId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getToId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTeamId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string text_message = 1;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getTextMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setTextMessage = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.protobuf.MessageOfNews.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearTextMessage = function() {
  return jspb.Message.setOneofField(this, 1, proto.protobuf.MessageOfNews.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasTextMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes binary_message = 2;
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes binary_message = 2;
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {string}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinaryMessage()));
};


/**
 * optional bytes binary_message = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinaryMessage()`
 * @return {!Uint8Array}
 */
proto.protobuf.MessageOfNews.prototype.getBinaryMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinaryMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setBinaryMessage = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.protobuf.MessageOfNews.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.clearBinaryMessage = function() {
  return jspb.Message.setOneofField(this, 2, proto.protobuf.MessageOfNews.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.MessageOfNews.prototype.hasBinaryMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 from_id = 3;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getFromId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setFromId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to_id = 4;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getToId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setToId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 team_id = 5;
 * @return {number}
 */
proto.protobuf.MessageOfNews.prototype.getTeamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.MessageOfNews} returns this
 */
proto.protobuf.MessageOfNews.prototype.setTeamId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto.protobuf);
